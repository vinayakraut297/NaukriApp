{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction DriveComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 1);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 1);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 1);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"input\", 3);\n    i0.ɵɵlistener(\"change\", function DriveComponent_tr_14_Template_input_change_8_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onFileSelected($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function DriveComponent_tr_14_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const drive_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.applyToCompany(drive_r1));\n    });\n    i0.ɵɵtext(10, \"Apply\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function DriveComponent_tr_14_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const drive_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.rejectCompany(drive_r1));\n    });\n    i0.ɵɵtext(12, \"Reject\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const drive_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.company);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.skillsRequired);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.jobTitle);\n  }\n}\nexport class DriveComponent {\n  constructor(http) {\n    this.http = http;\n    this.companyDrives = [];\n    this.selectedFile = null;\n  }\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n  fetchCompanyDrives() {\n    // this.http.get<CompanyDrive[]>('http://localhost:8080/companydrives/getAllCompany')\n    this.http.get('http://localhost:8080/recruiter/getAllCompany').subscribe(data => {\n      this.companyDrives = data;\n    });\n  }\n  // applyToCompany(drive: any): void {\n  //   // Logic to handle applying to the company\n  //   console.log(`Applying to company: ${drive.company}`);\n  //   // Add your backend integration here\n  // }\n  // applyToCompany(drive: any): void {\n  //   if (this.selectedFile) {\n  //     const formData = new FormData();\n  //     formData.append('resume', this.selectedFile, this.selectedFile.name);\n  //     formData.append('companyId', drive.id);\n  //     this.http.post('http://localhost:8080/companydrives/apply', formData)\n  //       .subscribe(response => {\n  //         console.log(`Applied to company: ${drive.company}`, response);\n  //       });\n  //   } else {\n  //     console.log('No resume selected.');\n  //   }\n  // }\n  // onFileSelected(event: any): void {\n  //   this.selectedFile = event.target.files[0];\n  // }\n  // applyToCompany(drive: any): void {\n  //   if (this.selectedFile) {\n  //     const formData = new FormData();\n  //     formData.append('resume', this.selectedFile, this.selectedFile.name);\n  //     formData.append('companyId', drive.id.toString());\n  //     this.http.post('http://localhost:8080/companydrives/apply', formData)\n  //       .subscribe(response => {\n  //         console.log(`Applied to company: ${drive.company}`, response);\n  //       });\n  //   } else {\n  //     console.log('No resume selected.');\n  //   }\n  // }\n  // TypeScript method to handle file selection\n  // selectedFile: File | null = null;\n  onFileSelected(event) {\n    const fileInput = event.target;\n    if (fileInput.files && fileInput.files.length > 0) {\n      this.selectedFile = fileInput.files[0];\n    }\n  }\n  applyToCompany(drive) {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('resume', this.selectedFile);\n      // Use the recruiter ID for application\n      this.http.post(`http://localhost:8080/companydrives/apply/${drive.id}`, formData).subscribe(response => {\n        console.log('Application successful', response);\n      }, error => {\n        console.error('Error in application', error);\n      });\n    } else {\n      alert('Please select a file before applying.');\n    }\n  }\n  rejectCompany(drive) {\n    // Logic to handle rejecting the company\n    console.log(`Rejecting company: ${drive.company}`);\n    // Add your backend integration here\n  }\n\n  static {\n    this.ɵfac = function DriveComponent_Factory(t) {\n      return new (t || DriveComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DriveComponent,\n      selectors: [[\"app-drive\"]],\n      decls: 15,\n      vars: 1,\n      consts: [[2, \"border-collapse\", \"collapse\", \"width\", \"100%\", \"border\", \"1px solid black\"], [2, \"border\", \"1px solid black\", \"padding\", \"8px\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"file\", 3, \"change\"], [2, \"border\", \"1px solid black\", \"padding\", \"8px\", 3, \"click\"]],\n      template: function DriveComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Company Drive Information\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"tr\")(5, \"th\", 1);\n          i0.ɵɵtext(6, \"Company Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"th\", 1);\n          i0.ɵɵtext(8, \"Skills Required\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"th\", 1);\n          i0.ɵɵtext(10, \"Job Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"th\", 1);\n          i0.ɵɵtext(12, \"Actions(Apply/Reject)\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(13, \"tbody\");\n          i0.ɵɵtemplate(14, DriveComponent_tr_14_Template, 13, 3, \"tr\", 2);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"ngForOf\", ctx.companyDrives);\n        }\n      },\n      dependencies: [i2.NgForOf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DriveComponent_tr_14_Template_input_change_8_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","onFileSelected","DriveComponent_tr_14_Template_button_click_9_listener","restoredCtx","drive_r1","$implicit","ctx_r4","applyToCompany","DriveComponent_tr_14_Template_button_click_11_listener","ctx_r5","rejectCompany","ɵɵadvance","ɵɵtextInterpolate","company","skillsRequired","jobTitle","DriveComponent","constructor","http","companyDrives","selectedFile","ngOnInit","fetchCompanyDrives","get","subscribe","data","event","fileInput","target","files","length","drive","formData","FormData","append","post","id","response","console","log","error","alert","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","DriveComponent_Template","rf","ctx","ɵɵtemplate","DriveComponent_tr_14_Template","ɵɵproperty"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\drive\\drive.component.ts","D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\drive\\drive.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CompanyDriveService } from '../services/company-drive.service';\n\ninterface CompanyDrive {\n  id: number;\n  company: string;\n  skillsRequired: string;\n  location: string;\n  jobTitle: string;\n}\n\n@Component({\n  selector: 'app-drive',\n  templateUrl: './drive.component.html',\n  styleUrls: ['./drive.component.css']\n})\nexport class DriveComponent implements OnInit {\n  companyDrives: CompanyDrive[] = [];\n  selectedFile: File | null = null;\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n\n  fetchCompanyDrives() {\n    // this.http.get<CompanyDrive[]>('http://localhost:8080/companydrives/getAllCompany')\n    this.http.get<CompanyDrive[]>('http://localhost:8080/recruiter/getAllCompany')\n      .subscribe((data) => {\n        this.companyDrives = data;\n      });\n  }\n  // applyToCompany(drive: any): void {\n  //   // Logic to handle applying to the company\n  //   console.log(`Applying to company: ${drive.company}`);\n  //   // Add your backend integration here\n  // }\n\n\n  // applyToCompany(drive: any): void {\n  //   if (this.selectedFile) {\n  //     const formData = new FormData();\n  //     formData.append('resume', this.selectedFile, this.selectedFile.name);\n  //     formData.append('companyId', drive.id);\n\n  //     this.http.post('http://localhost:8080/companydrives/apply', formData)\n  //       .subscribe(response => {\n  //         console.log(`Applied to company: ${drive.company}`, response);\n  //       });\n  //   } else {\n  //     console.log('No resume selected.');\n  //   }\n  // }\n\n  // onFileSelected(event: any): void {\n  //   this.selectedFile = event.target.files[0];\n  // }\n\n  // applyToCompany(drive: any): void {\n  //   if (this.selectedFile) {\n  //     const formData = new FormData();\n  //     formData.append('resume', this.selectedFile, this.selectedFile.name);\n  //     formData.append('companyId', drive.id.toString());\n  \n  //     this.http.post('http://localhost:8080/companydrives/apply', formData)\n  //       .subscribe(response => {\n  //         console.log(`Applied to company: ${drive.company}`, response);\n  //       });\n  //   } else {\n  //     console.log('No resume selected.');\n  //   }\n  // }\n  \n  \n// TypeScript method to handle file selection\n// selectedFile: File | null = null;\n\nonFileSelected(event: Event) {\n  const fileInput = event.target as HTMLInputElement;\n  if (fileInput.files && fileInput.files.length > 0) {\n    this.selectedFile = fileInput.files[0];\n  }\n}\n\napplyToCompany(drive: any) {\n  if (this.selectedFile) {\n    const formData = new FormData();\n    formData.append('resume', this.selectedFile);\n    \n    // Use the recruiter ID for application\n    this.http.post(`http://localhost:8080/companydrives/apply/${drive.id}`, formData)\n      .subscribe(response => {\n        console.log('Application successful', response);\n      }, error => {\n        console.error('Error in application', error);\n      });\n  } else {\n    alert('Please select a file before applying.');\n  }\n}\n\n\n  rejectCompany(drive: any): void {\n    // Logic to handle rejecting the company\n    console.log(`Rejecting company: ${drive.company}`);\n    // Add your backend integration here\n  }\n}\n","<h2>Company Drive Information</h2>\n<table style=\"border-collapse: collapse; width: 100%; border: 1px solid black;\">\n    <thead>\n    <tr>\n      <th style=\"border: 1px solid black; padding: 8px;\">Company Name</th>\n      <th style=\"border: 1px solid black; padding: 8px;\">Skills Required</th>\n      <th style=\"border: 1px solid black; padding: 8px;\">Job Title</th>\n      <th style=\"border: 1px solid black; padding: 8px;\">Actions(Apply/Reject)</th> <!-- Added a new column for actions -->\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let drive of companyDrives\">\n      <td style=\"border: 1px solid black; padding: 8px;\">{{ drive.company }}</td>\n      <td style=\"border: 1px solid black; padding: 8px;\">{{ drive.skillsRequired }}</td>\n      <td style=\"border: 1px solid black; padding: 8px;\">{{ drive.jobTitle }}</td>\n      <td>\n        <!-- Buttons for Apply and Reject actions -->\n        <input type=\"file\" (change)=\"onFileSelected($event)\" />\n        <button style=\"border: 1px solid black; padding: 8px;\" (click)=\"applyToCompany(drive)\">Apply</button> \n        <button style=\"border: 1px solid black; padding: 8px;\" (click)=\"rejectCompany(drive)\">Reject</button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}