{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth-service.service\";\nexport class StudentDashboardComponent {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n    this.username = 'xyz'; // To store the username\n    this.logout = new EventEmitter();\n  }\n  ngOnInit() {\n    const username = this.authService.getUser(); // Retrieve user data\n    if (username) {\n      this.username = username.username; // Get the username\n    } else {\n      this.router.navigate(['/student-dashboard']); // Redirect if user not found\n    }\n  }\n\n  onLogout() {\n    this.authService.clearUser(); // Clear user data\n    this.router.navigate(['/']); // Redirect to login page\n  }\n\n  static {\n    this.ɵfac = function StudentDashboardComponent_Factory(t) {\n      return new (t || StudentDashboardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: StudentDashboardComponent,\n      selectors: [[\"app-student-dashboard\"]],\n      outputs: {\n        logout: \"logout\"\n      },\n      decls: 4,\n      vars: 1,\n      consts: [[3, \"click\"]],\n      template: function StudentDashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h3\");\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function StudentDashboardComponent_Template_button_click_2_listener() {\n            return ctx.onLogout();\n          });\n          i0.ɵɵtext(3, \"Logout\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\"Welcome to Student Dashboard \", ctx.username, \"!\");\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["EventEmitter","StudentDashboardComponent","constructor","router","authService","username","logout","ngOnInit","getUser","navigate","onLogout","clearUser","i0","ɵɵdirectiveInject","i1","Router","i2","AuthService","selectors","outputs","decls","vars","consts","template","StudentDashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","StudentDashboardComponent_Template_button_click_2_listener","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\student-dashboard\\student-dashboard.component.ts","D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\student-dashboard\\student-dashboard.component.html"],"sourcesContent":["import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth-service.service';\n\n@Component({\n  selector: 'app-student-dashboard',\n  templateUrl: './student-dashboard.component.html',\n  styleUrls: ['./student-dashboard.component.css']\n})\nexport class StudentDashboardComponent implements OnInit {\n  username: string = 'xyz'; // To store the username\n  @Output() logout = new EventEmitter<void>();\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit() {\n    const username = this.authService.getUser(); // Retrieve user data\n    if (username) {\n      this.username = username.username; // Get the username\n    } else {\n      this.router.navigate(['/student-dashboard']); // Redirect if user not found\n    }\n  }\n\n  onLogout() {\n    this.authService.clearUser(); // Clear user data\n    this.router.navigate(['/']); // Redirect to login page\n  }\n}\n","<h3>Welcome to Student Dashboard {{ username }}!</h3>\n<button (click)=\"onLogout()\">Logout</button>\n"],"mappings":"AAAA,SAA4BA,YAAY,QAAgB,eAAe;;;;AASvE,OAAM,MAAOC,yBAAyB;EAIpCC,YAAoBC,MAAc,EAAUC,WAAwB;IAAhD,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;IAHvD,KAAAC,QAAQ,GAAW,KAAK,CAAC,CAAC;IAChB,KAAAC,MAAM,GAAG,IAAIN,YAAY,EAAQ;EAE4B;EAEvEO,QAAQA,CAAA;IACN,MAAMF,QAAQ,GAAG,IAAI,CAACD,WAAW,CAACI,OAAO,EAAE,CAAC,CAAC;IAC7C,IAAIH,QAAQ,EAAE;MACZ,IAAI,CAACA,QAAQ,GAAGA,QAAQ,CAACA,QAAQ,CAAC,CAAC;KACpC,MAAM;MACL,IAAI,CAACF,MAAM,CAACM,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;;EAElD;;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACN,WAAW,CAACO,SAAS,EAAE,CAAC,CAAC;IAC9B,IAAI,CAACR,MAAM,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC/B;;;;uBAlBWR,yBAAyB,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAzBhB,yBAAyB;MAAAiB,SAAA;MAAAC,OAAA;QAAAb,MAAA;MAAA;MAAAc,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCTtCb,EAAA,CAAAe,cAAA,SAAI;UAAAf,EAAA,CAAAgB,MAAA,GAA4C;UAAAhB,EAAA,CAAAiB,YAAA,EAAK;UACrDjB,EAAA,CAAAe,cAAA,gBAA6B;UAArBf,EAAA,CAAAkB,UAAA,mBAAAC,2DAAA;YAAA,OAASL,GAAA,CAAAhB,QAAA,EAAU;UAAA,EAAC;UAACE,EAAA,CAAAgB,MAAA,aAAM;UAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;UADxCjB,EAAA,CAAAoB,SAAA,GAA4C;UAA5CpB,EAAA,CAAAqB,kBAAA,kCAAAP,GAAA,CAAArB,QAAA,MAA4C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}