{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DriveComponent = class DriveComponent {\n  constructor(http) {\n    this.http = http;\n    this.companyDrives = [];\n    this.selectedFile = null;\n  }\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n  fetchCompanyDrives() {\n    // this.http.get<CompanyDrive[]>('http://localhost:8080/companydrives/getAllCompany')\n    this.http.get('http://localhost:8080/recruiter/getAllCompany').subscribe(data => {\n      this.companyDrives = data;\n    });\n  }\n  // applyToCompany(drive: any): void {\n  //   // Logic to handle applying to the company\n  //   console.log(`Applying to company: ${drive.company}`);\n  //   // Add your backend integration here\n  // }\n  // applyToCompany(drive: any): void {\n  //   if (this.selectedFile) {\n  //     const formData = new FormData();\n  //     formData.append('resume', this.selectedFile, this.selectedFile.name);\n  //     formData.append('companyId', drive.id);\n  //     this.http.post('http://localhost:8080/companydrives/apply', formData)\n  //       .subscribe(response => {\n  //         console.log(`Applied to company: ${drive.company}`, response);\n  //       });\n  //   } else {\n  //     console.log('No resume selected.');\n  //   }\n  // }\n  // onFileSelected(event: any): void {\n  //   this.selectedFile = event.target.files[0];\n  // }\n  // applyToCompany(drive: any): void {\n  //   if (this.selectedFile) {\n  //     const formData = new FormData();\n  //     formData.append('resume', this.selectedFile, this.selectedFile.name);\n  //     formData.append('companyId', drive.id.toString());\n  //     this.http.post('http://localhost:8080/companydrives/apply', formData)\n  //       .subscribe(response => {\n  //         console.log(`Applied to company: ${drive.company}`, response);\n  //       });\n  //   } else {\n  //     console.log('No resume selected.');\n  //   }\n  // }\n  // TypeScript method to handle file selection\n  // selectedFile: File | null = null;\n  onFileSelected(event) {\n    const fileInput = event.target;\n    if (fileInput.files && fileInput.files.length > 0) {\n      this.selectedFile = fileInput.files[0];\n    }\n  }\n  // applyToCompany(drive: any) {\n  //   if (this.selectedFile) {\n  //     const formData = new FormData();\n  //     formData.append('resume', this.selectedFile);\n  //     // Use the recruiter ID for application\n  //     this.http.post(`http://localhost:8080/companydrives/apply/${drive.id}`, formData)\n  //       .subscribe(response => {\n  //         console.log('Application successful', response);\n  //       }, error => {\n  //         console.error('Error in application', error);\n  //       });\n  //   } else {\n  //     alert('Please select a file before applying.');\n  //   }\n  // }\n  applyToCompany(id) {\n    this.http.post(`http://localhost:8080/companydrives/apply/${id}`, FormData).subscribe(response => {\n      console.log('Application Successful:', response);\n    }, error => {\n      console.error('Application Failed:', error);\n    });\n  }\n  rejectCompany(id) {\n    this.http.post(`http://localhost:8080/companydrives/reject/${id}`, {}).subscribe(response => {\n      console.log('Rejection Successful:', response);\n    }, error => {\n      console.error('Rejection Failed:', error);\n    });\n  }\n};\nDriveComponent = __decorate([Component({\n  selector: 'app-drive',\n  templateUrl: './drive.component.html',\n  styleUrls: ['./drive.component.css']\n})], DriveComponent);","map":{"version":3,"names":["Component","DriveComponent","constructor","http","companyDrives","selectedFile","ngOnInit","fetchCompanyDrives","get","subscribe","data","onFileSelected","event","fileInput","target","files","length","applyToCompany","id","post","FormData","response","console","log","error","rejectCompany","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\drive\\drive.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CompanyDriveService } from '../services/company-drive.service';\n\ninterface CompanyDrive {\n  id: number;\n  company: string;\n  skillsRequired: string;\n  location: string;\n  jobTitle: string;\n}\n\n@Component({\n  selector: 'app-drive',\n  templateUrl: './drive.component.html',\n  styleUrls: ['./drive.component.css']\n})\nexport class DriveComponent implements OnInit {\n  companyDrives: CompanyDrive[] = [];\n  selectedFile: File | null = null;\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n\n  fetchCompanyDrives() {\n    // this.http.get<CompanyDrive[]>('http://localhost:8080/companydrives/getAllCompany')\n    this.http.get<CompanyDrive[]>('http://localhost:8080/recruiter/getAllCompany')\n      .subscribe((data) => {\n        this.companyDrives = data;\n      });\n  }\n  // applyToCompany(drive: any): void {\n  //   // Logic to handle applying to the company\n  //   console.log(`Applying to company: ${drive.company}`);\n  //   // Add your backend integration here\n  // }\n\n\n  // applyToCompany(drive: any): void {\n  //   if (this.selectedFile) {\n  //     const formData = new FormData();\n  //     formData.append('resume', this.selectedFile, this.selectedFile.name);\n  //     formData.append('companyId', drive.id);\n\n  //     this.http.post('http://localhost:8080/companydrives/apply', formData)\n  //       .subscribe(response => {\n  //         console.log(`Applied to company: ${drive.company}`, response);\n  //       });\n  //   } else {\n  //     console.log('No resume selected.');\n  //   }\n  // }\n\n  // onFileSelected(event: any): void {\n  //   this.selectedFile = event.target.files[0];\n  // }\n\n  // applyToCompany(drive: any): void {\n  //   if (this.selectedFile) {\n  //     const formData = new FormData();\n  //     formData.append('resume', this.selectedFile, this.selectedFile.name);\n  //     formData.append('companyId', drive.id.toString());\n  \n  //     this.http.post('http://localhost:8080/companydrives/apply', formData)\n  //       .subscribe(response => {\n  //         console.log(`Applied to company: ${drive.company}`, response);\n  //       });\n  //   } else {\n  //     console.log('No resume selected.');\n  //   }\n  // }\n  \n  \n// TypeScript method to handle file selection\n// selectedFile: File | null = null;\n\nonFileSelected(event: Event) {\n  const fileInput = event.target as HTMLInputElement;\n  if (fileInput.files && fileInput.files.length > 0) {\n    this.selectedFile = fileInput.files[0];\n  }\n}\n\n// applyToCompany(drive: any) {\n//   if (this.selectedFile) {\n//     const formData = new FormData();\n//     formData.append('resume', this.selectedFile);\n    \n//     // Use the recruiter ID for application\n//     this.http.post(`http://localhost:8080/companydrives/apply/${drive.id}`, formData)\n//       .subscribe(response => {\n//         console.log('Application successful', response);\n//       }, error => {\n//         console.error('Error in application', error);\n//       });\n//   } else {\n//     alert('Please select a file before applying.');\n//   }\n// }\n\napplyToCompany(id: number) {\n  this.http.post(`http://localhost:8080/companydrives/apply/${id}`, FormData)\n    .subscribe(response => {\n      console.log('Application Successful:', response);\n    }, error => {\n      console.error('Application Failed:', error);\n    });\n}\n\nrejectCompany(id: number) {\n  this.http.post(`http://localhost:8080/companydrives/reject/${id}`, {})\n    .subscribe(response => {\n      console.log('Rejection Successful:', response);\n    }, error => {\n      console.error('Rejection Failed:', error);\n    });\n}\n\n\n\n// applyToCompany(drive: any) {\n//   if (this.selectedFile) {\n//     const formData = new FormData();\n//     formData.append('resume', this.selectedFile);\n    \n//     // Send the file to the backend\n//     this.http.post(`http://localhost:8080/companydrives/apply/${drive.id}`, formData)\n//       .subscribe(response => {\n//         console.log('Application successful', response);\n//       }, error => {\n//         console.error('Error in application', error);\n//       });\n//   } else {\n//     alert('Please select a file before applying.');\n//   }\n// }\n\n\n\n\n  // rejectCompany(drive: any): void {\n  //   // Logic to handle rejecting the company\n  //   console.log(`Rejecting company: ${drive.company}`);\n  //   // Add your backend integration here\n  // }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAiB1C,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,aAAa,GAAmB,EAAE;IAClC,KAAAC,YAAY,GAAgB,IAAI;EAEO;EAEvCC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAA,kBAAkBA,CAAA;IAChB;IACA,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAiB,+CAA+C,CAAC,CAC3EC,SAAS,CAAEC,IAAI,IAAI;MAClB,IAAI,CAACN,aAAa,GAAGM,IAAI;IAC3B,CAAC,CAAC;EACN;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGF;EACA;EAEAC,cAAcA,CAACC,KAAY;IACzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAA0B;IAClD,IAAID,SAAS,CAACE,KAAK,IAAIF,SAAS,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACjD,IAAI,CAACX,YAAY,GAAGQ,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC;;EAE1C;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAE,cAAcA,CAACC,EAAU;IACvB,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAC,6CAA6CD,EAAE,EAAE,EAAEE,QAAQ,CAAC,CACxEX,SAAS,CAACY,QAAQ,IAAG;MACpBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,QAAQ,CAAC;IAClD,CAAC,EAAEG,KAAK,IAAG;MACTF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACN;EAEAC,aAAaA,CAACP,EAAU;IACtB,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAC,8CAA8CD,EAAE,EAAE,EAAE,EAAE,CAAC,CACnET,SAAS,CAACY,QAAQ,IAAG;MACpBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,QAAQ,CAAC;IAChD,CAAC,EAAEG,KAAK,IAAG;MACTF,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CAAC;EACN;CA6BC;AAnIYvB,cAAc,GAAAyB,UAAA,EAL1B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW5B,cAAc,CAmI1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}