{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction ViewDriveComponent_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 1);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 1);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 1);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const drive_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.company);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.skillsRequired);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.jobTitle);\n  }\n}\nexport class ViewDriveComponent {\n  constructor(http) {\n    this.http = http;\n    this.companyDrives = [];\n    this.selectedFile = null;\n  }\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n  fetchCompanyDrives() {\n    this.http.get('http://localhost:8080/recruiter/getappliedCompany').subscribe(data => {\n      this.companyDrives = data;\n    });\n  }\n  onFileSelected(event) {\n    const fileInput = event.target;\n    if (fileInput.files && fileInput.files.length > 0) {\n      this.selectedFile = fileInput.files[0];\n    }\n  }\n  applyToCompany(drive) {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('file', this.selectedFile); // File attached\n      // POST request to apply with file attached\n      alert('Application Submitted successful');\n      this.http.post(`http://localhost:8080/companydrives/apply/${drive.id}`, formData).subscribe(response => {\n        console.log('Application successful', response);\n      }, error => {\n        console.error('Error in application', error);\n      });\n    } else {\n      alert('Please select a Resume before applying.');\n    }\n  }\n  rejectCompany(drive) {\n    alert(`Rejected company: ${drive.company}`);\n    this.http.post(`http://localhost:8080/companydrives/reject/${drive.id}`, {}).subscribe(response => {\n      console.log(`Rejected company: ${drive.company}`);\n    }, error => {\n      console.error('Error rejecting company', error);\n    });\n  }\n  static {\n    this.ɵfac = function ViewDriveComponent_Factory(t) {\n      return new (t || ViewDriveComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ViewDriveComponent,\n      selectors: [[\"app-view-drive\"]],\n      decls: 12,\n      vars: 1,\n      consts: [[2, \"border-collapse\", \"collapse\", \"width\", \"100%\", \"border\", \"1px solid black\"], [2, \"border\", \"1px solid black\", \"padding\", \"8px\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function ViewDriveComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\", 1);\n          i0.ɵɵtext(4, \"Company Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"th\", 1);\n          i0.ɵɵtext(6, \"Skills Required\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"th\", 1);\n          i0.ɵɵtext(8, \"Job Title\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(9, \"tbody\");\n          i0.ɵɵtemplate(10, ViewDriveComponent_tr_10_Template, 7, 3, \"tr\", 2);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(11, \"br\");\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngForOf\", ctx.companyDrives);\n        }\n      },\n      dependencies: [i2.NgForOf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","drive_r1","company","skillsRequired","jobTitle","ViewDriveComponent","constructor","http","companyDrives","selectedFile","ngOnInit","fetchCompanyDrives","get","subscribe","data","onFileSelected","event","fileInput","target","files","length","applyToCompany","drive","formData","FormData","append","alert","post","id","response","console","log","error","rejectCompany","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","ViewDriveComponent_Template","rf","ctx","ɵɵtemplate","ViewDriveComponent_tr_10_Template","ɵɵelement","ɵɵproperty"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\view-drive\\view-drive.component.ts","D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\view-drive\\view-drive.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\ninterface CompanyDrive {\n  id: number;\n  company: string;\n  skillsRequired: string;\n  jobTitle: string;\n}\n\n@Component({\n  selector: 'app-view-drive',\n  templateUrl: './view-drive.component.html',\n  styleUrls: ['./view-drive.component.css']\n})\nexport class ViewDriveComponent {\n\n  companyDrives: CompanyDrive[] = [];\n  selectedFile: File | null = null;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n\n  fetchCompanyDrives() {\n    this.http.get<CompanyDrive[]>('http://localhost:8080/recruiter/getappliedCompany')\n      .subscribe((data) => {\n        this.companyDrives = data;\n      });\n  }\n\n  onFileSelected(event: Event) {\n    const fileInput = event.target as HTMLInputElement;\n    if (fileInput.files && fileInput.files.length > 0) {\n      this.selectedFile = fileInput.files[0];\n    }\n  }\n\n  applyToCompany(drive: any) {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('file', this.selectedFile); // File attached\n\n      // POST request to apply with file attached\n      alert('Application Submitted successful');\n      this.http.post(`http://localhost:8080/companydrives/apply/${drive.id}`, formData)\n        .subscribe(response => {\n         \n          console.log('Application successful', response);\n        }, error => {\n          console.error('Error in application', error);\n        });\n    } else {\n      alert('Please select a Resume before applying.');\n    }\n  }\n\n  rejectCompany(drive: any): void {\n    alert(`Rejected company: ${drive.company}`);\n    this.http.post(`http://localhost:8080/companydrives/reject/${drive.id}`, {})\n      .subscribe(response => {\n       \n        console.log(`Rejected company: ${drive.company}`);\n      }, error => {\n        console.error('Error rejecting company', error);\n      });\n  }\n\n}\n","\n<!-- Adjusted Apply and Reject buttons with proper file handling -->\n<table style=\"border-collapse: collapse; width: 100%; border: 1px solid black;\">\n    <thead>\n      <tr>\n        <th style=\"border: 1px solid black; padding: 8px;\">Company Name</th>\n        <th style=\"border: 1px solid black; padding: 8px;\">Skills Required</th>\n        <th style=\"border: 1px solid black; padding: 8px;\">Job Title</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let drive of companyDrives\">\n        <td style=\"border: 1px solid black; padding: 8px;\">{{ drive.company }}</td>\n        <td style=\"border: 1px solid black; padding: 8px;\">{{ drive.skillsRequired }}</td>\n        <td style=\"border: 1px solid black; padding: 8px;\">{{ drive.jobTitle }}</td>       \n      </tr>\n      \n    </tbody>\n  </table>\n  <br>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}