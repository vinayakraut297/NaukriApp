{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ViewDriveComponent = class ViewDriveComponent {\n  constructor(http) {\n    this.http = http;\n    this.companyDrives = [];\n    this.selectedFile = null;\n  }\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n  fetchCompanyDrives() {\n    this.http.get('http://localhost:8080/recruiter/getAllCompany').subscribe(data => {\n      this.companyDrives = data;\n    });\n  }\n  onFileSelected(event) {\n    const fileInput = event.target;\n    if (fileInput.files && fileInput.files.length > 0) {\n      this.selectedFile = fileInput.files[0];\n    }\n  }\n  applyToCompany(drive) {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('file', this.selectedFile); // File attached\n      // POST request to apply with file attached\n      alert('Application Submitted successful');\n      this.http.post(`http://localhost:8080/companydrives/apply/${drive.id}`, formData).subscribe(response => {\n        console.log('Application successful', response);\n      }, error => {\n        console.error('Error in application', error);\n      });\n    } else {\n      alert('Please select a Resume before applying.');\n    }\n  }\n  rejectCompany(drive) {\n    alert(`Rejected company: ${drive.company}`);\n    this.http.post(`http://localhost:8080/companydrives/reject/${drive.id}`, {}).subscribe(response => {\n      console.log(`Rejected company: ${drive.company}`);\n    }, error => {\n      console.error('Error rejecting company', error);\n    });\n  }\n};\nViewDriveComponent = __decorate([Component({\n  selector: 'app-view-drive',\n  templateUrl: './view-drive.component.html',\n  styleUrls: ['./view-drive.component.css']\n})], ViewDriveComponent);","map":{"version":3,"names":["Component","ViewDriveComponent","constructor","http","companyDrives","selectedFile","ngOnInit","fetchCompanyDrives","get","subscribe","data","onFileSelected","event","fileInput","target","files","length","applyToCompany","drive","formData","FormData","append","alert","post","id","response","console","log","error","rejectCompany","company","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\view-drive\\view-drive.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\ninterface CompanyDrive {\n  id: number;\n  company: string;\n  skillsRequired: string;\n  location: string;\n  jobTitle: string;\n}\n\n@Component({\n  selector: 'app-view-drive',\n  templateUrl: './view-drive.component.html',\n  styleUrls: ['./view-drive.component.css']\n})\nexport class ViewDriveComponent {\n  companyDrives: CompanyDrive[] = [];\n  selectedFile: File | null = null;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n\n  fetchCompanyDrives() {\n    this.http.get<CompanyDrive[]>('http://localhost:8080/recruiter/getAllCompany')\n      .subscribe((data) => {\n        this.companyDrives = data;\n      });\n  }\n\n  onFileSelected(event: Event) {\n    const fileInput = event.target as HTMLInputElement;\n    if (fileInput.files && fileInput.files.length > 0) {\n      this.selectedFile = fileInput.files[0];\n    }\n  }\n\n  applyToCompany(drive: any) {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('file', this.selectedFile); // File attached\n\n      // POST request to apply with file attached\n      alert('Application Submitted successful');\n      this.http.post(`http://localhost:8080/companydrives/apply/${drive.id}`, formData)\n        .subscribe(response => {\n         \n          console.log('Application successful', response);\n        }, error => {\n          console.error('Error in application', error);\n        });\n    } else {\n      alert('Please select a Resume before applying.');\n    }\n  }\n\n  rejectCompany(drive: any): void {\n    alert(`Rejected company: ${drive.company}`);\n    this.http.post(`http://localhost:8080/companydrives/reject/${drive.id}`, {})\n      .subscribe(response => {\n       \n        console.log(`Rejected company: ${drive.company}`);\n      }, error => {\n        console.error('Error rejecting company', error);\n      });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAelC,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAI7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,aAAa,GAAmB,EAAE;IAClC,KAAAC,YAAY,GAAgB,IAAI;EAEQ;EAExCC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAA,kBAAkBA,CAAA;IAChB,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAiB,+CAA+C,CAAC,CAC3EC,SAAS,CAAEC,IAAI,IAAI;MAClB,IAAI,CAACN,aAAa,GAAGM,IAAI;IAC3B,CAAC,CAAC;EACN;EAEAC,cAAcA,CAACC,KAAY;IACzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAA0B;IAClD,IAAID,SAAS,CAACE,KAAK,IAAIF,SAAS,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACjD,IAAI,CAACX,YAAY,GAAGQ,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC;;EAE1C;EAEAE,cAAcA,CAACC,KAAU;IACvB,IAAI,IAAI,CAACb,YAAY,EAAE;MACrB,MAAMc,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAChB,YAAY,CAAC,CAAC,CAAC;MAE5C;MACAiB,KAAK,CAAC,kCAAkC,CAAC;MACzC,IAAI,CAACnB,IAAI,CAACoB,IAAI,CAAC,6CAA6CL,KAAK,CAACM,EAAE,EAAE,EAAEL,QAAQ,CAAC,CAC9EV,SAAS,CAACgB,QAAQ,IAAG;QAEpBC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,QAAQ,CAAC;MACjD,CAAC,EAAEG,KAAK,IAAG;QACTF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAAC;KACL,MAAM;MACLN,KAAK,CAAC,yCAAyC,CAAC;;EAEpD;EAEAO,aAAaA,CAACX,KAAU;IACtBI,KAAK,CAAC,qBAAqBJ,KAAK,CAACY,OAAO,EAAE,CAAC;IAC3C,IAAI,CAAC3B,IAAI,CAACoB,IAAI,CAAC,8CAA8CL,KAAK,CAACM,EAAE,EAAE,EAAE,EAAE,CAAC,CACzEf,SAAS,CAACgB,QAAQ,IAAG;MAEpBC,OAAO,CAACC,GAAG,CAAC,qBAAqBT,KAAK,CAACY,OAAO,EAAE,CAAC;IACnD,CAAC,EAAEF,KAAK,IAAG;MACTF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN;CACD;AArDY3B,kBAAkB,GAAA8B,UAAA,EAL9B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWjC,kBAAkB,CAqD9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}