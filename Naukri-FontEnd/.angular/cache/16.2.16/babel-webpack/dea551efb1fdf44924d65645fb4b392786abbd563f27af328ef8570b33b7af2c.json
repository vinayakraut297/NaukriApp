{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { AppConfig } from '../app.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../auth-service.service\";\nimport * as i5 from \"@angular/common\";\nfunction RecruiterDashboardComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RecruiterDashboardComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Valid email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RecruiterDashboardComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Company name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let RecruiterDashboardComponent = /*#__PURE__*/(() => {\n  class RecruiterDashboardComponent {\n    constructor(fb, http, router, authService) {\n      this.fb = fb;\n      this.http = http;\n      this.router = router;\n      this.authService = authService;\n      this.username = ''; // To store the username\n      this.logout = new EventEmitter();\n    }\n    ngOnInit() {\n      // Initialize the recruiter form\n      this.recruiterForm = this.fb.group({\n        name: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        company: ['', Validators.required],\n        jobTitle: [''],\n        skillsRequired: ['']\n      });\n      // Retrieve user data (if needed)\n      const user = this.authService.getUser();\n      if (user) {\n        this.username = user.username; // Get the username\n      } else {\n        this.router.navigate(['/recruiter-dashboard']); // Redirect if user not found\n      }\n    }\n\n    onSubmit() {\n      if (this.recruiterForm.valid) {\n        this.http.post(`${AppConfig.apiUrl}/recruitersDash/register`, this.recruiterForm.value).subscribe(response => {\n          console.log('Recruiter registered successfully', response);\n          this.router.navigate(['/recruiter-dashboard']);\n        }, error => {\n          console.error('Error occurred during registration', error);\n        });\n      }\n    }\n    onLogout() {\n      this.authService.clearUser(); // Clear user data\n      this.router.navigate(['/']); // Redirect to login page\n    }\n\n    static {\n      this.ɵfac = function RecruiterDashboardComponent_Factory(t) {\n        return new (t || RecruiterDashboardComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AuthService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: RecruiterDashboardComponent,\n        selectors: [[\"app-recruiter-dashboard\"]],\n        outputs: {\n          logout: \"logout\"\n        },\n        decls: 35,\n        vars: 6,\n        consts: [[3, \"click\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Enter your name\"], [4, \"ngIf\"], [\"for\", \"email\"], [\"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Enter your email\"], [\"for\", \"company\"], [\"id\", \"company\", \"formControlName\", \"company\", \"placeholder\", \"Enter your company name\"], [\"for\", \"jobTitle\"], [\"id\", \"jobTitle\", \"formControlName\", \"jobTitle\", \"placeholder\", \"Enter the job title\"], [\"for\", \"skillsRequired\"], [\"id\", \"skillsRequired\", \"formControlName\", \"skillsRequired\", \"placeholder\", \"Enter required skills\"], [\"type\", \"submit\", 3, \"disabled\"]],\n        template: function RecruiterDashboardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h3\");\n            i0.ɵɵtext(1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"button\", 0);\n            i0.ɵɵlistener(\"click\", function RecruiterDashboardComponent_Template_button_click_2_listener() {\n              return ctx.onLogout();\n            });\n            i0.ɵɵtext(3, \"Logout\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function RecruiterDashboardComponent_Template_form_ngSubmit_4_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(5, \"div\")(6, \"label\", 2);\n            i0.ɵɵtext(7, \"Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(8, \"input\", 3);\n            i0.ɵɵtemplate(9, RecruiterDashboardComponent_div_9_Template, 2, 0, \"div\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(10, \"br\");\n            i0.ɵɵelementStart(11, \"div\")(12, \"label\", 5);\n            i0.ɵɵtext(13, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(14, \"input\", 6);\n            i0.ɵɵtemplate(15, RecruiterDashboardComponent_div_15_Template, 2, 0, \"div\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(16, \"br\");\n            i0.ɵɵelementStart(17, \"div\")(18, \"label\", 7);\n            i0.ɵɵtext(19, \"Company\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(20, \"input\", 8);\n            i0.ɵɵtemplate(21, RecruiterDashboardComponent_div_21_Template, 2, 0, \"div\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(22, \"br\");\n            i0.ɵɵelementStart(23, \"div\")(24, \"label\", 9);\n            i0.ɵɵtext(25, \"Job Title\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(26, \"input\", 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(27, \"br\");\n            i0.ɵɵelementStart(28, \"div\")(29, \"label\", 11);\n            i0.ɵɵtext(30, \"Skills Required\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(31, \"input\", 12);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(32, \"br\");\n            i0.ɵɵelementStart(33, \"button\", 13);\n            i0.ɵɵtext(34, \"Submit\");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            let tmp_2_0;\n            let tmp_3_0;\n            let tmp_4_0;\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\"Welcome to Recruiter Dashboard \", ctx.username, \" !\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.recruiterForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.recruiterForm.get(\"name\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.recruiterForm.get(\"name\")) == null ? null : tmp_2_0.touched));\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.recruiterForm.get(\"email\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.recruiterForm.get(\"email\")) == null ? null : tmp_3_0.touched));\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.recruiterForm.get(\"company\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.recruiterForm.get(\"company\")) == null ? null : tmp_4_0.touched));\n            i0.ɵɵadvance(12);\n            i0.ɵɵproperty(\"disabled\", ctx.recruiterForm.invalid);\n          }\n        },\n        dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n      });\n    }\n  }\n  return RecruiterDashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}