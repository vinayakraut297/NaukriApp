{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DriveComponent = class DriveComponent {\n  constructor(http) {\n    this.http = http;\n    this.companyDrives = [];\n  }\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n  fetchCompanyDrives() {\n    this.http.get('http://localhost:8080/company-drive').subscribe(data => {\n      this.companyDrives = data;\n    });\n  }\n};\nDriveComponent = __decorate([Component({\n  selector: 'app-drive',\n  templateUrl: './drive.component.html',\n  styleUrls: ['./drive.component.css']\n})], DriveComponent);","map":{"version":3,"names":["Component","DriveComponent","constructor","http","companyDrives","ngOnInit","fetchCompanyDrives","get","subscribe","data","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\drive\\drive.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CompanyDriveService } from '../services/company-drive.service';\nimport { HttpClient } from '@angular/common/http';\n\ninterface CompanyDrive {\n  id: number;\n  companyName: string;\n  driveDate: string;\n  location: string;\n  description: string;\n}\n\n@Component({\n  selector: 'app-drive',\n  templateUrl: './drive.component.html',\n  styleUrls: ['./drive.component.css']\n})\nexport class DriveComponent implements OnInit {\n\n  \n  companyDrives: CompanyDriveService[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n\n  fetchCompanyDrives() {\n    this.http.get<CompanyDriveService[]>('http://localhost:8080/company-drive')\n      .subscribe((data) => {\n        this.companyDrives = data;\n      });\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAiB1C,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,aAAa,GAA0B,EAAE;EAEF;EAEvCC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAA,kBAAkBA,CAAA;IAChB,IAAI,CAACH,IAAI,CAACI,GAAG,CAAwB,qCAAqC,CAAC,CACxEC,SAAS,CAAEC,IAAI,IAAI;MAClB,IAAI,CAACL,aAAa,GAAGK,IAAI;IAC3B,CAAC,CAAC;EACN;CACD;AAjBYR,cAAc,GAAAS,UAAA,EAL1BV,SAAS,CAAC;EACTW,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWZ,cAAc,CAiB1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}