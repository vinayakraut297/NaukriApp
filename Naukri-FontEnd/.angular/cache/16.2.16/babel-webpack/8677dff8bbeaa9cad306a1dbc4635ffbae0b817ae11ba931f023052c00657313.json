{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction DriveComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function DriveComponent_tr_14_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const drive_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.applyToCompany(drive_r1));\n    });\n    i0.ɵɵtext(9, \"Apply\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function DriveComponent_tr_14_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const drive_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.rejectCompany(drive_r1));\n    });\n    i0.ɵɵtext(11, \"Reject\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const drive_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.company);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.skillsRequired);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.jobTitle);\n  }\n}\nexport class DriveComponent {\n  constructor(http) {\n    this.http = http;\n    this.companyDrives = [];\n  }\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n  fetchCompanyDrives() {\n    this.http.get('http://localhost:8080/recruiter/getAllCompany').subscribe(data => {\n      this.companyDrives = data;\n    });\n  }\n  applyToCompany(drive) {\n    // Logic to handle applying to the company\n    console.log(`Applying to company: ${drive.company}`);\n    // Add your backend integration here\n  }\n\n  rejectCompany(drive) {\n    // Logic to handle rejecting the company\n    console.log(`Rejecting company: ${drive.company}`);\n    // Add your backend integration here\n  }\n\n  static {\n    this.ɵfac = function DriveComponent_Factory(t) {\n      return new (t || DriveComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DriveComponent,\n      selectors: [[\"app-drive\"]],\n      decls: 15,\n      vars: 1,\n      consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n      template: function DriveComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Company Drive Information\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"table\")(3, \"thead\")(4, \"tr\")(5, \"th\");\n          i0.ɵɵtext(6, \"Company Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"th\");\n          i0.ɵɵtext(8, \"Skills Required\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"th\");\n          i0.ɵɵtext(10, \"Job Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"th\");\n          i0.ɵɵtext(12, \"Actions(Apply/Reject)\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(13, \"tbody\");\n          i0.ɵɵtemplate(14, DriveComponent_tr_14_Template, 12, 3, \"tr\", 0);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"ngForOf\", ctx.companyDrives);\n        }\n      },\n      dependencies: [i2.NgForOf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DriveComponent_tr_14_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r3","drive_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","applyToCompany","DriveComponent_tr_14_Template_button_click_10_listener","ctx_r4","rejectCompany","ɵɵadvance","ɵɵtextInterpolate","company","skillsRequired","jobTitle","DriveComponent","constructor","http","companyDrives","ngOnInit","fetchCompanyDrives","get","subscribe","data","drive","console","log","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","DriveComponent_Template","rf","ctx","ɵɵtemplate","DriveComponent_tr_14_Template","ɵɵproperty"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\drive\\drive.component.ts","D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\drive\\drive.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CompanyDriveService } from '../services/company-drive.service';\n\ninterface CompanyDrive {\n  id: number;\n  company: string;\n  skillsRequired: string;\n  location: string;\n  jobTitle: string;\n}\n\n@Component({\n  selector: 'app-drive',\n  templateUrl: './drive.component.html',\n  styleUrls: ['./drive.component.css']\n})\nexport class DriveComponent implements OnInit {\n  companyDrives: CompanyDrive[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n\n  fetchCompanyDrives() {\n    this.http.get<CompanyDrive[]>('http://localhost:8080/recruiter/getAllCompany')\n      .subscribe((data) => {\n        this.companyDrives = data;\n      });\n  }\n  applyToCompany(drive: any): void {\n    // Logic to handle applying to the company\n    console.log(`Applying to company: ${drive.company}`);\n    // Add your backend integration here\n  }\n  \n  rejectCompany(drive: any): void {\n    // Logic to handle rejecting the company\n    console.log(`Rejecting company: ${drive.company}`);\n    // Add your backend integration here\n  }\n}\n","<h2>Company Drive Information</h2>\n<table>\n  <thead>\n    <tr>\n      <th>Company Name</th>\n      <th>Skills Required</th>\n      <th>Job Title</th>\n      <th>Actions(Apply/Reject)</th> <!-- Added a new column for actions -->\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let drive of companyDrives\">\n      <td>{{ drive.company }}</td>\n      <td>{{ drive.skillsRequired }}</td>\n      <td>{{ drive.jobTitle }}</td>\n      <td>\n        <!-- Buttons for Apply and Reject actions -->\n        <button (click)=\"applyToCompany(drive)\">Apply</button> \n        <button (click)=\"rejectCompany(drive)\">Reject</button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}