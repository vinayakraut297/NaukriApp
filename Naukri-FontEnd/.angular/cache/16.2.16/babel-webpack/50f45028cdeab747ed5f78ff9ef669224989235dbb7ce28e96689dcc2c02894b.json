{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  registerRecruiter(data) {\n    return this.http.post(`${AppConfig.apiUrl}/naukri/reg`, data);\n  }\n  static {\n    this.ɵfac = function StudentServiceService_Factory(t) {\n      return new (t || StudentServiceService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StudentServiceService,\n      factory: StudentServiceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["StudentServiceService","constructor","http","registerRecruiter","data","post","AppConfig","apiUrl","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp1\\src\\app\\student-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentServiceService {\n  constructor(private http: HttpClient) {}\n\n  registerRecruiter(data: any): Observable<any> {\n    return this.http.post<any>(`${AppConfig.apiUrl}/naukri/reg`, data);\n  }\n}\n\n\n\n// import { HttpClient } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\n// import { Observable } from 'rxjs';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class StudentServiceService {\n\n\n//   public apiUrl = 'http://localhost:8080';\n\n//   constructor(private http: HttpClient) {}\n\n//   registerRecruiter(data: any): Observable<any> {\n//     return this.http.post<any>(this.apiUrl+\"/naukri/reg\", data);\n//   }\n// }\n"],"mappings":";;AAOA,OAAM,MAAOA,qBAAqB;EAChCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,iBAAiBA,CAACC,IAAS;IACzB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,GAAGC,SAAS,CAACC,MAAM,aAAa,EAAEH,IAAI,CAAC;EACpE;;;uBALWJ,qBAAqB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAArBX,qBAAqB;MAAAY,OAAA,EAArBZ,qBAAqB,CAAAa,IAAA;MAAAC,UAAA,EAFpB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}