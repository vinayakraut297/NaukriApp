{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction DriveComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const drive_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.companyName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.driveDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.location);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.description);\n  }\n}\nexport class DriveComponent {\n  static {\n    this.ɵfac = function DriveComponent_Factory(t) {\n      return new (t || DriveComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DriveComponent,\n      selectors: [[\"app-drive\"]],\n      decls: 17,\n      vars: 1,\n      consts: [[4, \"ngFor\", \"ngForOf\"]],\n      template: function DriveComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"drive works!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"h2\");\n          i0.ɵɵtext(3, \"Company Drive Information\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"table\")(5, \"thead\")(6, \"tr\")(7, \"th\");\n          i0.ɵɵtext(8, \"Company Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"th\");\n          i0.ɵɵtext(10, \"Drive Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"th\");\n          i0.ɵɵtext(12, \"Location\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"th\");\n          i0.ɵɵtext(14, \"Description\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"tbody\");\n          i0.ɵɵtemplate(16, DriveComponent_tr_16_Template, 9, 4, \"tr\", 0);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"ngForOf\", ctx.companyDrives);\n        }\n      },\n      dependencies: [i1.NgForOf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","drive_r1","companyName","driveDate","location","description","DriveComponent","selectors","decls","vars","consts","template","DriveComponent_Template","rf","ctx","ɵɵtemplate","DriveComponent_tr_16_Template","ɵɵproperty","companyDrives"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\drive\\drive.component.ts","D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\drive\\drive.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-drive',\n  templateUrl: './drive.component.html',\n  styleUrls: ['./drive.component.css']\n})\nexport class DriveComponent {\n\n}\n","<p>drive works!</p>\n\n\n<!-- drive.component.html -->\n<h2>Company Drive Information</h2>\n<table>\n  <thead>\n    <tr>\n      <th>Company Name</th>\n      <th>Drive Date</th>\n      <th>Location</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let drive of companyDrives\">\n      <td>{{ drive.companyName }}</td>\n      <td>{{ drive.driveDate }}</td>\n      <td>{{ drive.location }}</td>\n      <td>{{ drive.description }}</td>\n    </tr>\n  </tbody>\n</table>\n"],"mappings":";;;;ICeIA,EAAA,CAAAC,cAAA,SAAwC;IAClCD,EAAA,CAAAE,MAAA,GAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAChCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC9BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC7BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAH5BH,EAAA,CAAAI,SAAA,GAAuB;IAAvBJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAC,WAAA,CAAuB;IACvBP,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAE,SAAA,CAAqB;IACrBR,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAG,QAAA,CAAoB;IACpBT,EAAA,CAAAI,SAAA,GAAuB;IAAvBJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAI,WAAA,CAAuB;;;ADZjC,OAAM,MAAOC,cAAc;;;uBAAdA,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAAC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCP3BlB,EAAA,CAAAC,cAAA,QAAG;UAAAD,EAAA,CAAAE,MAAA,mBAAY;UAAAF,EAAA,CAAAG,YAAA,EAAI;UAInBH,EAAA,CAAAC,cAAA,SAAI;UAAAD,EAAA,CAAAE,MAAA,gCAAyB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAClCH,EAAA,CAAAC,cAAA,YAAO;UAGGD,EAAA,CAAAE,MAAA,mBAAY;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACrBH,EAAA,CAAAC,cAAA,SAAI;UAAAD,EAAA,CAAAE,MAAA,kBAAU;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACnBH,EAAA,CAAAC,cAAA,UAAI;UAAAD,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACjBH,EAAA,CAAAC,cAAA,UAAI;UAAAD,EAAA,CAAAE,MAAA,mBAAW;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAGxBH,EAAA,CAAAC,cAAA,aAAO;UACLD,EAAA,CAAAoB,UAAA,KAAAC,6BAAA,gBAKK;UACPrB,EAAA,CAAAG,YAAA,EAAQ;;;UANgBH,EAAA,CAAAI,SAAA,IAAgB;UAAhBJ,EAAA,CAAAsB,UAAA,YAAAH,GAAA,CAAAI,aAAA,CAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}