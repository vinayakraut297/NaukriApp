{"ast":null,"code":"\"use strict\";\n\n// import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n// import { Router } from '@angular/router';\n// import { AuthService } from '../auth-service.service';\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\n// import { HttpClient } from '@angular/common/http';\n// @Component({\n//   selector: 'app-recruiter-dashboard',\n//   templateUrl: './recruiter-dashboard.component.html',\n//   styleUrls: ['./recruiter-dashboard.component.css']\n// })\n// export class RecruiterDashboardComponent implements OnInit {\n//   // recruiterForm: FormGroup; // FormGroup for the recruiter form\n//   recruiterForm!: FormGroup; \n//   username: string = ''; // To store the username\n//   @Output() logout = new EventEmitter<void>();\n//   constructor(\n//     private fb: FormBuilder,\n//     private http: HttpClient,\n//     private router: Router,\n//     private authService: AuthService\n//   ) {}\n//   ngOnInit(): void {\n//     // Initialize the recruiter form\n//     this.recruiterForm = this.fb.group({\n//       name: ['', Validators.required],\n//       email: ['', [Validators.required, Validators.email]],\n//       company: ['', Validators.required],\n//       jobTitle: [''],\n//       skillsRequired: ['']\n//     });\n//     // Retrieve user data (if needed)\n//     const user = this.authService.getUser();\n//     if (user) {\n//       this.username = user.username; // Get the username\n//     } else {\n//       this.router.navigate(['/']); // Redirect if user not found\n//     }\n//   }\n//   onSubmit(): void {\n//     if (this.recruiterForm.valid) {\n//       this.http.post('http://localhost:8080/recruitersDash/register', this.recruiterForm.value)\n//         .subscribe(response => {\n//           console.log('Recruiter registered successfully', response);\n//           // Optionally reset the form or redirect after submission\n//           this.recruiterForm.reset(); // Resets the form after submission\n//         }, error => {\n//           console.error('Error occurred during registration', error);\n//         });\n//     }\n//   }\n//   onLogout() {\n//     this.authService.clearUser(); // Clear user data\n//     this.router.navigate(['/']); // Redirect to login page\n//   }\n// }\n// import { Component, EventEmitter, Output } from '@angular/core';\n// import { Router } from '@angular/router';\n// import { AuthService } from '../auth-service.service';\n// @Component({\n//   selector: 'app-recruiter-dashboard',\n//   templateUrl: './recruiter-dashboard.component.html',\n//   styleUrls: ['./recruiter-dashboard.component.css']\n// })\n// export class RecruiterDashboardComponent {\n//   username: string = ''; // To store the username\n//   @Output() logout = new EventEmitter<void>();\n//   constructor(private router: Router, private authService: AuthService) {}\n//   onLogout() {\n//     this.authService.clearUser(); // Clear user data\n//     this.router.navigate(['/']); // Redirect to login page\n//   }\n// }","map":{"version":3,"names":[],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp1\\src\\app\\recruiter-dashboard\\recruiter-dashboard.component.ts"],"sourcesContent":["\n\n// import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n// import { Router } from '@angular/router';\n// import { AuthService } from '../auth-service.service';\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\n// import { HttpClient } from '@angular/common/http';\n\n// @Component({\n//   selector: 'app-recruiter-dashboard',\n//   templateUrl: './recruiter-dashboard.component.html',\n//   styleUrls: ['./recruiter-dashboard.component.css']\n// })\n// export class RecruiterDashboardComponent implements OnInit {\n//   // recruiterForm: FormGroup; // FormGroup for the recruiter form\n//   recruiterForm!: FormGroup; \n//   username: string = ''; // To store the username\n//   @Output() logout = new EventEmitter<void>();\n\n//   constructor(\n//     private fb: FormBuilder,\n//     private http: HttpClient,\n//     private router: Router,\n//     private authService: AuthService\n//   ) {}\n\n//   ngOnInit(): void {\n//     // Initialize the recruiter form\n//     this.recruiterForm = this.fb.group({\n//       name: ['', Validators.required],\n//       email: ['', [Validators.required, Validators.email]],\n//       company: ['', Validators.required],\n//       jobTitle: [''],\n//       skillsRequired: ['']\n//     });\n\n//     // Retrieve user data (if needed)\n//     const user = this.authService.getUser();\n//     if (user) {\n//       this.username = user.username; // Get the username\n//     } else {\n//       this.router.navigate(['/']); // Redirect if user not found\n//     }\n//   }\n\n//   onSubmit(): void {\n//     if (this.recruiterForm.valid) {\n//       this.http.post('http://localhost:8080/recruitersDash/register', this.recruiterForm.value)\n//         .subscribe(response => {\n//           console.log('Recruiter registered successfully', response);\n//           // Optionally reset the form or redirect after submission\n//           this.recruiterForm.reset(); // Resets the form after submission\n//         }, error => {\n//           console.error('Error occurred during registration', error);\n//         });\n//     }\n//   }\n\n//   onLogout() {\n//     this.authService.clearUser(); // Clear user data\n//     this.router.navigate(['/']); // Redirect to login page\n//   }\n// }\n\n\n// import { Component, EventEmitter, Output } from '@angular/core';\n// import { Router } from '@angular/router';\n// import { AuthService } from '../auth-service.service';\n\n// @Component({\n//   selector: 'app-recruiter-dashboard',\n//   templateUrl: './recruiter-dashboard.component.html',\n//   styleUrls: ['./recruiter-dashboard.component.css']\n// })\n// export class RecruiterDashboardComponent {\n//   username: string = ''; // To store the username\n//   @Output() logout = new EventEmitter<void>();\n//   constructor(private router: Router, private authService: AuthService) {}\n\n//   onLogout() {\n//     this.authService.clearUser(); // Clear user data\n//     this.router.navigate(['/']); // Redirect to login page\n//   }\n// }\n"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}