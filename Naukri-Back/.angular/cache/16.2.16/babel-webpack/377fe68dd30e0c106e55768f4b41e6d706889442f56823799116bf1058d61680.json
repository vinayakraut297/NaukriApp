{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../auth-service.service\";\nexport class RecruiterLoginComponent {\n  constructor(http, router, authService) {\n    this.http = http;\n    this.router = router;\n    this.authService = authService;\n    this.emailOrMobile = '';\n    this.password = '';\n    this.errorMessage = '';\n    this.loginSuccess = new EventEmitter();\n    this.isLoggedIn = false;\n  }\n  onLoginSuccess() {\n    this.isLoggedIn = true;\n  }\n  onSubmit() {\n    const loginData = {\n      email: this.emailOrMobile.includes('@') ? this.emailOrMobile : '',\n      mobileNumber: this.emailOrMobile.includes('@') ? '' : this.emailOrMobile,\n      password: this.password\n    };\n    this.http.post('http://localhost:8080/recruiter/login', loginData).subscribe(response => {\n      console.log('Login successful', response);\n      this.authService.setUser(response);\n      this.router.navigate(['/recruiter-dashboard']);\n    }, error => {\n      this.errorMessage = error.error?.message || 'Login failed. Please check your credentials.';\n    });\n  }\n  static {\n    this.ɵfac = function RecruiterLoginComponent_Factory(t) {\n      return new (t || RecruiterLoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RecruiterLoginComponent,\n      selectors: [[\"app-recruiter-login\"]],\n      outputs: {\n        loginSuccess: \"loginSuccess\"\n      },\n      decls: 0,\n      vars: 0,\n      template: function RecruiterLoginComponent_Template(rf, ctx) {},\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["EventEmitter","RecruiterLoginComponent","constructor","http","router","authService","emailOrMobile","password","errorMessage","loginSuccess","isLoggedIn","onLoginSuccess","onSubmit","loginData","email","includes","mobileNumber","post","subscribe","response","console","log","setUser","navigate","error","message","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","i3","AuthService","selectors","outputs","decls","vars","template","RecruiterLoginComponent_Template","rf","ctx","styles"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp1\\src\\app\\recruiter-login\\recruiter-login.component.ts"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth-service.service';\n\n@Component({\n  selector: 'app-recruiter-login',\n  templateUrl: './recruiter-login.component.html',\n  styleUrls: ['./recruiter-login.component.css']\n})\nexport class RecruiterLoginComponent {\n  emailOrMobile: string = '';\n  password: string = '';\n  errorMessage: string = '';\n  @Output() loginSuccess = new EventEmitter<void>();\n  isLoggedIn: boolean = false;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  onLoginSuccess() {\n    this.isLoggedIn = true;\n  }\n\n  onSubmit() {\n    const loginData = {\n      email: this.emailOrMobile.includes('@') ? this.emailOrMobile : '',\n      mobileNumber: this.emailOrMobile.includes('@') ? '' : this.emailOrMobile,\n      password: this.password\n    };\n\n    this.http.post('http://localhost:8080/recruiter/login', loginData).subscribe(\n      (response) => {\n        console.log('Login successful', response);\n        this.authService.setUser(response);\n        this.router.navigate(['/recruiter-dashboard']);\n      },\n      (error) => {\n        this.errorMessage = error.error?.message || 'Login failed. Please check your credentials.';\n      }\n    );\n  }\n}\n\n// import { Component, EventEmitter, Output } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\n// import { Router } from '@angular/router';\n// import { AuthService } from '../auth-service.service';\n\n// @Component({\n//   selector: 'app-recruiter-login',\n//   templateUrl: './recruiter-login.component.html',\n//   styleUrls: ['./recruiter-login.component.css']\n// })\n// export class RecruiterLoginComponent {\n//   emailOrMobile: string = '';\n//   password: string = '';\n//   errorMessage: string = '';\n\n//   @Output() loginSuccess = new EventEmitter<void>();\n//   isLoggedIn: boolean = false;\n\n//   constructor(\n//     private http: HttpClient,\n//     private router: Router,\n//     private authService: AuthService\n//   ) {}\n\n//   onLoginSuccess() {\n//     this.isLoggedIn = true;\n//   }\n\n//   onSubmit() {\n//     const loginData = {\n//       emailOrMobile: this.emailOrMobile,\n//       password: this.password\n//     };\n\n//     this.http.post('http://localhost:8080/recruiter/login', loginData).subscribe(\n//       (response) => {\n//         console.log('Login successful', response);\n//         this.authService.setUser(response);\n//         this.router.navigate(['/recruiter-dashboard']);\n//       },\n//       (error) => {\n//         this.errorMessage =\n//           error.error?.message || 'Login failed. Please check your credentials.';\n//       }\n//     );\n//   }\n// }\n"],"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;;;;;AAU/D,OAAM,MAAOC,uBAAuB;EAOlCC,YACUC,IAAgB,EAChBC,MAAc,EACdC,WAAwB;IAFxB,KAAAF,IAAI,GAAJA,IAAI;IACJ,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IATrB,KAAAC,aAAa,GAAW,EAAE;IAC1B,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,YAAY,GAAW,EAAE;IACf,KAAAC,YAAY,GAAG,IAAIT,YAAY,EAAQ;IACjD,KAAAU,UAAU,GAAY,KAAK;EAMxB;EAEHC,cAAcA,CAAA;IACZ,IAAI,CAACD,UAAU,GAAG,IAAI;EACxB;EAEAE,QAAQA,CAAA;IACN,MAAMC,SAAS,GAAG;MAChBC,KAAK,EAAE,IAAI,CAACR,aAAa,CAACS,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAACT,aAAa,GAAG,EAAE;MACjEU,YAAY,EAAE,IAAI,CAACV,aAAa,CAACS,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAACT,aAAa;MACxEC,QAAQ,EAAE,IAAI,CAACA;KAChB;IAED,IAAI,CAACJ,IAAI,CAACc,IAAI,CAAC,uCAAuC,EAAEJ,SAAS,CAAC,CAACK,SAAS,CACzEC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAAC;MACzC,IAAI,CAACd,WAAW,CAACiB,OAAO,CAACH,QAAQ,CAAC;MAClC,IAAI,CAACf,MAAM,CAACmB,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC;IAChD,CAAC,EACAC,KAAK,IAAI;MACR,IAAI,CAAChB,YAAY,GAAGgB,KAAK,CAACA,KAAK,EAAEC,OAAO,IAAI,8CAA8C;IAC5F,CAAC,CACF;EACH;;;uBAlCWxB,uBAAuB,EAAAyB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAvBhC,uBAAuB;MAAAiC,SAAA;MAAAC,OAAA;QAAA1B,YAAA;MAAA;MAAA2B,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;MAAAC,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}