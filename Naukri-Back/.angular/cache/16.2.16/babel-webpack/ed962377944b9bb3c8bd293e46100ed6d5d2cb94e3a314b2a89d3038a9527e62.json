{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/recruiter-service.service\";\nimport * as i2 from \"@angular/router\";\nexport class RecruiterRegComponent {\n  constructor(recruiterService, router) {\n    this.recruiterService = recruiterService;\n    this.router = router;\n    this.username = '';\n    this.mobileNumber = '';\n    this.email = '';\n    this.errorMessage = '';\n    this.successMessage = '';\n  }\n  onSubmit() {\n    const recruiterData = {\n      username: this.username,\n      mobileNumber: this.mobileNumber,\n      email: this.email\n    };\n    this.recruiterService.registerRecruiter(recruiterData).subscribe(response => {\n      console.log('Data successfully sent to backend:', response);\n      this.successMessage = 'Registration successful! Your password is: ' + response.password;\n      this.errorMessage = '';\n      this.router.navigate(['/recruiter-login']); // Redirect after successful registration\n    }, error => {\n      this.handleError(error);\n    });\n  }\n  handleError(error) {\n    if (error.status === 409) {\n      this.errorMessage = error.error; // Adjust based on your API response structure\n    } else {\n      this.errorMessage = 'An error occurred. Please try again.';\n    }\n    console.error('Error occurred while submitting form:', error);\n  }\n  static {\n    this.ɵfac = function RecruiterRegComponent_Factory(t) {\n      return new (t || RecruiterRegComponent)(i0.ɵɵdirectiveInject(i1.RecruiterServiceService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RecruiterRegComponent,\n      selectors: [[\"app-recruiter-reg\"]],\n      decls: 5,\n      vars: 0,\n      template: function RecruiterRegComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"Recruiter \");\n          i0.ɵɵelementStart(2, \"b\");\n          i0.ɵɵtext(3, \"Register\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(4, \" Page!\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\".btn-space[_ngcontent-%COMP%]{\\n    margin-right: 10px; \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVjcnVpdGVyLWxvZ2luL3JlY3J1aXRlci1yZWcvcmVjcnVpdGVyLXJlZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0FBQ3RCIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi1zcGFjZXtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDsgXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["RecruiterRegComponent","constructor","recruiterService","router","username","mobileNumber","email","errorMessage","successMessage","onSubmit","recruiterData","registerRecruiter","subscribe","response","console","log","password","navigate","error","handleError","status","i0","ɵɵdirectiveInject","i1","RecruiterServiceService","i2","Router","selectors","decls","vars","template","RecruiterRegComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp1\\src\\app\\recruiter-login\\recruiter-reg\\recruiter-reg.component.ts","D:\\Java Hefshine\\Angular\\NaukriApp1\\src\\app\\recruiter-login\\recruiter-reg\\recruiter-reg.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RecruiterServiceService } from 'src/app/recruiter-service.service';\n\n@Component({\n  selector: 'app-recruiter-reg',\n  templateUrl: './recruiter-reg.component.html',\n  styleUrls: ['./recruiter-reg.component.css']\n})\nexport class RecruiterRegComponent {\n  username: string = '';\n  mobileNumber: string = '';\n  email: string = '';\n  errorMessage: string = '';\n  successMessage: string = '';\n\n  constructor(private recruiterService: RecruiterServiceService, private router: Router) {}\n\n  onSubmit() {\n    const recruiterData = { username: this.username, mobileNumber: this.mobileNumber, email: this.email };\n\n    this.recruiterService.registerRecruiter(recruiterData).subscribe(\n      response => {\n        console.log('Data successfully sent to backend:', response);\n        this.successMessage = 'Registration successful! Your password is: ' + response.password;\n        this.errorMessage = '';\n        this.router.navigate(['/recruiter-login']); // Redirect after successful registration\n      },\n      error => {\n        this.handleError(error);\n      }\n    );\n  }\n\n  private handleError(error: any) {\n    if (error.status === 409) {\n      this.errorMessage = error.error; // Adjust based on your API response structure\n    } else {\n      this.errorMessage = 'An error occurred. Please try again.';\n    }\n    console.error('Error occurred while submitting form:', error);\n  }\n}\n","<!-- <p>recruiter-reg works!</p> -->\n<p>Recruiter <b>Register</b> Page!</p>\n<!-- <form (ngSubmit)=\"onSubmit()\" #recruiterForm=\"ngForm\">\n  <label for=\"username\">Username</label>\n  <input\n    type=\"text\"\n    [(ngModel)]=\"username\"\n    name=\"username\"\n    id=\"username\"\n    required\n    minlength=\"3\"\n    #usernameInput=\"ngModel\"\n  />\n  <div *ngIf=\"usernameInput.invalid && usernameInput.touched\">\n    <small *ngIf=\"usernameInput.errors?.['required']\">Username is required.</small>\n    <small *ngIf=\"usernameInput.errors?.['minlength']\">Username must be at least 3 characters long.</small>\n  </div>\n  <br /><br />\n  <label for=\"mobileNumber\">Mobile</label>\n  <input\n    type=\"text\"\n    [(ngModel)]=\"mobileNumber\"\n    name=\"mobileNumber\"\n    id=\"mobileNumber\"\n    required\n    pattern=\"^[0-9]{10}$\"\n    #mobileInput=\"ngModel\"\n  />\n  <div *ngIf=\"mobileInput.invalid && mobileInput.touched\">\n    <small *ngIf=\"mobileInput.errors?.['required']\">Mobile number is required.</small>\n    <small *ngIf=\"mobileInput.errors?.['pattern']\">Mobile number must be exactly 10 digits.</small>\n  </div>\n  <br /><br />\n  <label for=\"email\">Email</label>\n  <input\n    type=\"email\"\n    [(ngModel)]=\"email\"\n    name=\"email\"\n    id=\"email\"\n    required\n    email\n    #emailInput=\"ngModel\"\n  />\n  <div *ngIf=\"emailInput.invalid && emailInput.touched\">\n    <small *ngIf=\"emailInput.errors?.['required']\">Email is required.</small>\n    <small *ngIf=\"emailInput.errors?.['email']\">Please enter a valid email address.</small>\n  </div>\n  <br /><br />\n  <button class=\"btn-space\" type=\"submit\" [disabled]=\"recruiterForm.invalid\">Register</button>\n\n  <button class=\"btn-space\" [routerLink]=\"['/recruiter-login']\">Login</button>\n</form> -->\n"],"mappings":";;;AASA,OAAM,MAAOA,qBAAqB;EAOhCC,YAAoBC,gBAAyC,EAAUC,MAAc;IAAjE,KAAAD,gBAAgB,GAAhBA,gBAAgB;IAAmC,KAAAC,MAAM,GAANA,MAAM;IAN7E,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,cAAc,GAAW,EAAE;EAE6D;EAExFC,QAAQA,CAAA;IACN,MAAMC,aAAa,GAAG;MAAEN,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAEC,YAAY,EAAE,IAAI,CAACA,YAAY;MAAEC,KAAK,EAAE,IAAI,CAACA;IAAK,CAAE;IAErG,IAAI,CAACJ,gBAAgB,CAACS,iBAAiB,CAACD,aAAa,CAAC,CAACE,SAAS,CAC9DC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,QAAQ,CAAC;MAC3D,IAAI,CAACL,cAAc,GAAG,6CAA6C,GAAGK,QAAQ,CAACG,QAAQ;MACvF,IAAI,CAACT,YAAY,GAAG,EAAE;MACtB,IAAI,CAACJ,MAAM,CAACc,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC,EACDC,KAAK,IAAG;MACN,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC;IACzB,CAAC,CACF;EACH;EAEQC,WAAWA,CAACD,KAAU;IAC5B,IAAIA,KAAK,CAACE,MAAM,KAAK,GAAG,EAAE;MACxB,IAAI,CAACb,YAAY,GAAGW,KAAK,CAACA,KAAK,CAAC,CAAC;KAClC,MAAM;MACL,IAAI,CAACX,YAAY,GAAG,sCAAsC;;IAE5DO,OAAO,CAACI,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;EAC/D;;;uBAhCWlB,qBAAqB,EAAAqB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,uBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAArB1B,qBAAqB;MAAA2B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCRlCX,EAAA,CAAAa,cAAA,QAAG;UAAAb,EAAA,CAAAc,MAAA,iBAAU;UAAAd,EAAA,CAAAa,cAAA,QAAG;UAAAb,EAAA,CAAAc,MAAA,eAAQ;UAAAd,EAAA,CAAAe,YAAA,EAAI;UAACf,EAAA,CAAAc,MAAA,aAAK;UAAAd,EAAA,CAAAe,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}