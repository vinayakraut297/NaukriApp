{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction DriveComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const drive_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.company);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.driveDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.jobTitle);\n  }\n}\nexport class DriveComponent {\n  constructor(http) {\n    this.http = http;\n    this.companyDrives = [];\n  }\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n  fetchCompanyDrives() {\n    this.http.get('http://localhost:8080/recruiter/getAllCompany').subscribe(data => {\n      this.companyDrives = data;\n    });\n  }\n  static {\n    this.ɵfac = function DriveComponent_Factory(t) {\n      return new (t || DriveComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DriveComponent,\n      selectors: [[\"app-drive\"]],\n      decls: 13,\n      vars: 1,\n      consts: [[4, \"ngFor\", \"ngForOf\"]],\n      template: function DriveComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Company Drive Information\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"table\")(3, \"thead\")(4, \"tr\")(5, \"th\");\n          i0.ɵɵtext(6, \"Company Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"th\");\n          i0.ɵɵtext(8, \"skillsRequired\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"th\");\n          i0.ɵɵtext(10, \"JobTitle\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"tbody\");\n          i0.ɵɵtemplate(12, DriveComponent_tr_12_Template, 7, 3, \"tr\", 0);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"ngForOf\", ctx.companyDrives);\n        }\n      },\n      dependencies: [i2.NgForOf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","drive_r1","company","driveDate","jobTitle","DriveComponent","constructor","http","companyDrives","ngOnInit","fetchCompanyDrives","get","subscribe","data","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","DriveComponent_Template","rf","ctx","ɵɵtemplate","DriveComponent_tr_12_Template","ɵɵproperty"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\drive\\drive.component.ts","D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\drive\\drive.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CompanyDriveService } from '../services/company-drive.service';\n\ninterface CompanyDrive {\n  id: number;\n  company: string;\n  driveDate: string;\n  location: string;\n  jobTitle: string;\n}\n\n@Component({\n  selector: 'app-drive',\n  templateUrl: './drive.component.html',\n  styleUrls: ['./drive.component.css']\n})\nexport class DriveComponent implements OnInit {\n  companyDrives: CompanyDrive[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n\n  fetchCompanyDrives() {\n    this.http.get<CompanyDrive[]>('http://localhost:8080/recruiter/getAllCompany')\n      .subscribe((data) => {\n        this.companyDrives = data;\n      });\n  }\n}\n","<!-- drive.component.html -->\n<h2>Company Drive Information</h2>\n<table>\n  <thead>\n    <tr>\n      <th>Company Name</th>\n      <th>skillsRequired</th>\n      <!-- <th>Location</th> -->\n      <th>JobTitle</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let drive of companyDrives\">\n      <td>{{ drive.company }}</td>\n      <td>{{ drive.driveDate }}</td>\n      <!-- <td>{{ drive.location }}</td> -->\n      <td>{{ drive.jobTitle }}</td>\n    </tr>\n  </tbody>\n</table>\n"],"mappings":";;;;;ICYIA,EAAA,CAAAC,cAAA,SAAwC;IAClCD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC5BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAE9BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAHzBH,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAC,OAAA,CAAmB;IACnBP,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAE,SAAA,CAAqB;IAErBR,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAG,QAAA,CAAoB;;;ADC9B,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,aAAa,GAAmB,EAAE;EAEK;EAEvCC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAA,kBAAkBA,CAAA;IAChB,IAAI,CAACH,IAAI,CAACI,GAAG,CAAiB,+CAA+C,CAAC,CAC3EC,SAAS,CAAEC,IAAI,IAAI;MAClB,IAAI,CAACL,aAAa,GAAGK,IAAI;IAC3B,CAAC,CAAC;EACN;;;uBAdWR,cAAc,EAAAV,EAAA,CAAAmB,iBAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;YAAdX,cAAc;MAAAY,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UChB3B5B,EAAA,CAAAC,cAAA,SAAI;UAAAD,EAAA,CAAAE,MAAA,gCAAyB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAClCH,EAAA,CAAAC,cAAA,YAAO;UAGGD,EAAA,CAAAE,MAAA,mBAAY;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACrBH,EAAA,CAAAC,cAAA,SAAI;UAAAD,EAAA,CAAAE,MAAA,qBAAc;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAEvBH,EAAA,CAAAC,cAAA,SAAI;UAAAD,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAGrBH,EAAA,CAAAC,cAAA,aAAO;UACLD,EAAA,CAAA8B,UAAA,KAAAC,6BAAA,gBAKK;UACP/B,EAAA,CAAAG,YAAA,EAAQ;;;UANgBH,EAAA,CAAAI,SAAA,IAAgB;UAAhBJ,EAAA,CAAAgC,UAAA,YAAAH,GAAA,CAAAhB,aAAA,CAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}