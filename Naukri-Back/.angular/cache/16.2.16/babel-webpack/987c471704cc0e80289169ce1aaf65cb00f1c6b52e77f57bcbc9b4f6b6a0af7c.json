{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction DriveComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 1);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 1);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 1);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"input\", 4);\n    i0.ɵɵlistener(\"change\", function DriveComponent_tr_12_Template_input_change_8_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onFileSelected($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function DriveComponent_tr_12_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const drive_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.applyToCompany(drive_r1));\n    });\n    i0.ɵɵtext(10, \"Apply\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function DriveComponent_tr_12_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const drive_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.rejectCompany(drive_r1));\n    });\n    i0.ɵɵtext(12, \"Reject\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const drive_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.company);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.skillsRequired);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drive_r1.jobTitle);\n  }\n}\nconst _c0 = function () {\n  return [\"/viewdrive\"];\n};\nexport class DriveComponent {\n  constructor(http) {\n    this.http = http;\n    this.companyDrives = [];\n    this.selectedFile = null;\n  }\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n  fetchCompanyDrives() {\n    this.http.get('http://localhost:8080/recruiter/getAllCompany').subscribe(data => {\n      this.companyDrives = data;\n    });\n  }\n  onFileSelected(event) {\n    const fileInput = event.target;\n    if (fileInput.files && fileInput.files.length > 0) {\n      this.selectedFile = fileInput.files[0];\n    }\n  }\n  applyToCompany(drive) {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('file', this.selectedFile); // File attached\n      // POST request to apply with file attached\n      alert('Application Submitted successful');\n      this.http.post(`http://localhost:8080/companydrives/apply/${drive.id}`, formData).subscribe(response => {\n        console.log('Application successful', response);\n      }, error => {\n        console.error('Error in application', error);\n      });\n    } else {\n      alert('Please select a Resume before applying.');\n    }\n  }\n  rejectCompany(drive) {\n    alert(`Rejected company: ${drive.company}`);\n    this.http.post(`http://localhost:8080/companydrives/reject/${drive.com}`, {}).subscribe(response => {\n      console.log(`Rejected company: ${drive.company}`);\n    }, error => {\n      console.error('Error rejecting company', error);\n    });\n  }\n  static {\n    this.ɵfac = function DriveComponent_Factory(t) {\n      return new (t || DriveComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DriveComponent,\n      selectors: [[\"app-drive\"]],\n      decls: 16,\n      vars: 3,\n      consts: [[2, \"border-collapse\", \"collapse\", \"width\", \"100%\", \"border\", \"1px solid black\"], [2, \"border\", \"1px solid black\", \"padding\", \"8px\"], [4, \"ngFor\", \"ngForOf\"], [2, \"border\", \"1px solid black\", \"padding\", \"8px\", 3, \"routerLink\"], [\"type\", \"file\", 3, \"change\"], [2, \"border\", \"1px solid black\", \"padding\", \"8px\", 3, \"click\"]],\n      template: function DriveComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\", 1);\n          i0.ɵɵtext(4, \"Company Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"th\", 1);\n          i0.ɵɵtext(6, \"Skills Required\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"th\", 1);\n          i0.ɵɵtext(8, \"Job Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"th\", 1);\n          i0.ɵɵtext(10, \"Actions (Apply/Reject)\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"tbody\");\n          i0.ɵɵtemplate(12, DriveComponent_tr_12_Template, 13, 3, \"tr\", 2);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(13, \"br\");\n          i0.ɵɵelementStart(14, \"button\", 3);\n          i0.ɵɵtext(15, \"View Applied\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"ngForOf\", ctx.companyDrives);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n        }\n      },\n      dependencies: [i2.NgForOf, i3.RouterLink],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DriveComponent_tr_12_Template_input_change_8_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","onFileSelected","DriveComponent_tr_12_Template_button_click_9_listener","restoredCtx","drive_r1","$implicit","ctx_r4","applyToCompany","DriveComponent_tr_12_Template_button_click_11_listener","ctx_r5","rejectCompany","ɵɵadvance","ɵɵtextInterpolate","company","skillsRequired","jobTitle","DriveComponent","constructor","http","companyDrives","selectedFile","ngOnInit","fetchCompanyDrives","get","subscribe","data","event","fileInput","target","files","length","drive","formData","FormData","append","alert","post","id","response","console","log","error","com","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","DriveComponent_Template","rf","ctx","ɵɵtemplate","DriveComponent_tr_12_Template","ɵɵelement","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\drive\\drive.component.ts","D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\drive\\drive.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\ninterface CompanyDrive {\n  id: number;\n  company: string;\n  skillsRequired: string;\n  location: string;\n  jobTitle: string;\n}\n\n@Component({\n  selector: 'app-drive',\n  templateUrl: './drive.component.html',\n  styleUrls: ['./drive.component.css']\n})\nexport class DriveComponent implements OnInit {\n\n  companyDrives: CompanyDrive[] = [];\n  selectedFile: File | null = null;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n\n  fetchCompanyDrives() {\n    this.http.get<CompanyDrive[]>('http://localhost:8080/recruiter/getAllCompany')\n      .subscribe((data) => {\n        this.companyDrives = data;\n      });\n  }\n\n  onFileSelected(event: Event) {\n    const fileInput = event.target as HTMLInputElement;\n    if (fileInput.files && fileInput.files.length > 0) {\n      this.selectedFile = fileInput.files[0];\n    }\n  }\n\n  applyToCompany(drive: any) {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('file', this.selectedFile); // File attached\n\n      // POST request to apply with file attached\n      alert('Application Submitted successful');\n      this.http.post(`http://localhost:8080/companydrives/apply/${drive.id}`, formData)\n        .subscribe(response => {\n         \n          console.log('Application successful', response);\n        }, error => {\n          console.error('Error in application', error);\n        });\n    } else {\n      alert('Please select a Resume before applying.');\n    }\n  }\n\n  rejectCompany(drive: any): void {\n    alert(`Rejected company: ${drive.company}`);\n    this.http.post(`http://localhost:8080/companydrives/reject/${drive.com}`, {})\n      .subscribe(response => {\n       \n        console.log(`Rejected company: ${drive.company}`);\n      }, error => {\n        console.error('Error rejecting company', error);\n      });\n  }\n}\n\n","\n<!-- Adjusted Apply and Reject buttons with proper file handling -->\n<table style=\"border-collapse: collapse; width: 100%; border: 1px solid black;\">\n  <thead>\n    <tr>\n      <th style=\"border: 1px solid black; padding: 8px;\">Company Name</th>\n      <th style=\"border: 1px solid black; padding: 8px;\">Skills Required</th>\n      <th style=\"border: 1px solid black; padding: 8px;\">Job Title</th>\n      <th style=\"border: 1px solid black; padding: 8px;\">Actions (Apply/Reject)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let drive of companyDrives\">\n      <td style=\"border: 1px solid black; padding: 8px;\">{{ drive.company }}</td>\n      <td style=\"border: 1px solid black; padding: 8px;\">{{ drive.skillsRequired }}</td>\n      <td style=\"border: 1px solid black; padding: 8px;\">{{ drive.jobTitle }}</td>\n      <td>\n        <!-- File input for resume upload -->\n        <input type=\"file\" (change)=\"onFileSelected($event)\" />  \n        <!-- Button to apply to a company -->\n        <button style=\"border: 1px solid black; padding: 8px;\" (click)=\"applyToCompany(drive)\">Apply</button>\n        <!-- Button to reject a company -->\n        <button style=\"border: 1px solid black; padding: 8px;\" (click)=\"rejectCompany(drive)\">Reject</button>\n      </td>\n      \n    </tr>\n    \n  </tbody>\n</table>\n<br>\n<button style=\"border: 1px solid black; padding: 8px;\" [routerLink]=\"['/viewdrive']\">View Applied</button>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}