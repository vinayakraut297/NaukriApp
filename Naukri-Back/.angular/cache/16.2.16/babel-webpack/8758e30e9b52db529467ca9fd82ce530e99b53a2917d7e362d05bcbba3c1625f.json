{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nexport let StudentLoginComponent = class StudentLoginComponent {\n  constructor(http, router, authService) {\n    this.http = http;\n    this.router = router;\n    this.authService = authService;\n    // username: string = '';\n    this.emailOrMobile = '';\n    this.password = '';\n    this.errorMessage = '';\n    this.currentComponent = '';\n    this.loginSuccess = new EventEmitter();\n    this.isLoggedIn = false;\n  }\n  onLoginSuccess() {\n    this.isLoggedIn = true;\n  }\n  Register() {\n    this.router.navigate(['/recruiter-login']);\n  }\n  onSubmit() {\n    console.log('Username:', this.emailOrMobile);\n    console.log('Password:', this.password);\n    const loginData = {\n      emailOrMobile: this.emailOrMobile,\n      password: this.password\n    };\n    // Perform login HTTP request\n    this.http.post('http://localhost:8080/naukri/login', loginData).subscribe(response => {\n      console.log('Login successful', response);\n      this.authService.setUser(response);\n      this.router.navigate(['/student-dashboard']); // Example redirect on success\n    }, error => {\n      this.errorMessage = error.error.message;\n    });\n  }\n};\n__decorate([Output()], StudentLoginComponent.prototype, \"loginSuccess\", void 0);\nStudentLoginComponent = __decorate([Component({\n  selector: 'app-student-login',\n  templateUrl: './student-login.component.html',\n  styleUrls: ['./student-login.component.css']\n})], StudentLoginComponent);","map":{"version":3,"names":["Component","EventEmitter","Output","StudentLoginComponent","constructor","http","router","authService","emailOrMobile","password","errorMessage","currentComponent","loginSuccess","isLoggedIn","onLoginSuccess","Register","navigate","onSubmit","console","log","loginData","post","subscribe","response","setUser","error","message","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\student-login\\student-login.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth-service.service';\n\n@Component({\n  selector: 'app-student-login',\n  templateUrl: './student-login.component.html',\n  styleUrls: ['./student-login.component.css']\n})\nexport class StudentLoginComponent {\n  // username: string = '';\n  emailOrMobile: string = '';\n   password: string = '';\n   errorMessage: string = '';\n   constructor(private http: HttpClient, private router: Router, private authService: AuthService\n  ) {}\n  currentComponent: string = '';\n  \n  @Output() loginSuccess = new EventEmitter<void>();\n  \n  isLoggedIn: boolean = false;\n  \n    onLoginSuccess() {\n      this.isLoggedIn = true;\n    }\n  \n    Register(){\n      this.router.navigate(['/recruiter-login']);\n    }\n\n  onSubmit() {\n      console.log('Username:', this.emailOrMobile );\n      console.log('Password:', this.password); \n      const loginData = {\n        emailOrMobile: this.emailOrMobile,\n        password: this.password\n      };\n    \n      // Perform login HTTP request\n      this.http.post('http://localhost:8080/naukri/login', loginData).subscribe(\n        response => {\n          console.log('Login successful', response);\n    this.authService.setUser(response); \n          this.router.navigate(['/student-dashboard']); // Example redirect on success\n        },\n        error => {\n          this.errorMessage = error.error.message;\n        }\n      );\n    }\n    \n\n}\n"],"mappings":";AACA,SAASA,SAAS,EAAEC,YAAY,EAAEC,MAAM,QAAQ,eAAe;AASxD,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAK/BC,YAAoBC,IAAgB,EAAUC,MAAc,EAAUC,WAAwB;IAA1E,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;IAJlF;IACA,KAAAC,aAAa,GAAW,EAAE;IACzB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,YAAY,GAAW,EAAE;IAG1B,KAAAC,gBAAgB,GAAW,EAAE;IAEnB,KAAAC,YAAY,GAAG,IAAIX,YAAY,EAAQ;IAEjD,KAAAY,UAAU,GAAY,KAAK;EALxB;EAODC,cAAcA,CAAA;IACZ,IAAI,CAACD,UAAU,GAAG,IAAI;EACxB;EAEAE,QAAQA,CAAA;IACN,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;EAC5C;EAEFC,QAAQA,CAAA;IACJC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACX,aAAa,CAAE;IAC7CU,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACV,QAAQ,CAAC;IACvC,MAAMW,SAAS,GAAG;MAChBZ,aAAa,EAAE,IAAI,CAACA,aAAa;MACjCC,QAAQ,EAAE,IAAI,CAACA;KAChB;IAED;IACA,IAAI,CAACJ,IAAI,CAACgB,IAAI,CAAC,oCAAoC,EAAED,SAAS,CAAC,CAACE,SAAS,CACvEC,QAAQ,IAAG;MACTL,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEI,QAAQ,CAAC;MAC/C,IAAI,CAAChB,WAAW,CAACiB,OAAO,CAACD,QAAQ,CAAC;MAC5B,IAAI,CAACjB,MAAM,CAACU,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC,EACDS,KAAK,IAAG;MACN,IAAI,CAACf,YAAY,GAAGe,KAAK,CAACA,KAAK,CAACC,OAAO;IACzC,CAAC,CACF;EACH;CAGH;AAlCWC,UAAA,EAATzB,MAAM,EAAE,C,0DAAyC;AATvCC,qBAAqB,GAAAwB,UAAA,EALjC3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACW3B,qBAAqB,CA2CjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}