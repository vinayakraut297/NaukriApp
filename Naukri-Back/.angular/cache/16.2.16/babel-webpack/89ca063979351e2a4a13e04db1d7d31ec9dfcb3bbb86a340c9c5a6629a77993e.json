{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DriveComponent {\n  constructor(http) {\n    this.http = http;\n    this.companyDrives = [];\n  }\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n  fetchCompanyDrives() {\n    this.http.get('http://localhost:8080/company-drive').subscribe(data => {\n      this.companyDrives = data;\n    });\n  }\n  static {\n    this.ɵfac = function DriveComponent_Factory(t) {\n      return new (t || DriveComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DriveComponent,\n      selectors: [[\"app-drive\"]],\n      decls: 16,\n      vars: 0,\n      template: function DriveComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"drive works!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"h2\");\n          i0.ɵɵtext(3, \"Company Drive Information\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"table\")(5, \"thead\")(6, \"tr\")(7, \"th\");\n          i0.ɵɵtext(8, \"Company Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"th\");\n          i0.ɵɵtext(10, \"Drive Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"th\");\n          i0.ɵɵtext(12, \"Location\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"th\");\n          i0.ɵɵtext(14, \"Description\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(15, \"tbody\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["DriveComponent","constructor","http","companyDrives","ngOnInit","fetchCompanyDrives","get","subscribe","data","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","template","DriveComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\drive\\drive.component.ts","D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\drive\\drive.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CompanyDriveService } from '../services/company-drive.service';\nimport { HttpClient } from '@angular/common/http';\n\ninterface CompanyDrive {\n  id: number;\n  companyName: string;\n  driveDate: string;\n  location: string;\n  description: string;\n}\n\n@Component({\n  selector: 'app-drive',\n  templateUrl: './drive.component.html',\n  styleUrls: ['./drive.component.css']\n})\nexport class DriveComponent implements OnInit {\n\n  \n  companyDrives: CompanyDriveService[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.fetchCompanyDrives();\n  }\n\n  fetchCompanyDrives() {\n    this.http.get<CompanyDriveService[]>('http://localhost:8080/company-drive')\n      .subscribe((data) => {\n        this.companyDrives = data;\n      });\n  }\n}","<p>drive works!</p>\n\n\n<!-- drive.component.html -->\n<h2>Company Drive Information</h2>\n<table>\n  <thead>\n    <tr>\n      <th>Company Name</th>\n      <th>Drive Date</th>\n      <th>Location</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <!-- <tr *ngFor=\"let drive of companyDrives\">\n      <td>{{ drive.companyName }}</td>\n      <td>{{ drive.driveDate }}</td>\n      <td>{{ drive.location }}</td>\n      <td>{{ drive.description }}</td> -->\n    <!-- </tr> -->\n  </tbody>\n</table>\n"],"mappings":";;AAiBA,OAAM,MAAOA,cAAc;EAKzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,aAAa,GAA0B,EAAE;EAEF;EAEvCC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAA,kBAAkBA,CAAA;IAChB,IAAI,CAACH,IAAI,CAACI,GAAG,CAAwB,qCAAqC,CAAC,CACxEC,SAAS,CAAEC,IAAI,IAAI;MAClB,IAAI,CAACL,aAAa,GAAGK,IAAI;IAC3B,CAAC,CAAC;EACN;;;uBAhBWR,cAAc,EAAAS,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;YAAdZ,cAAc;MAAAa,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCjB3BT,EAAA,CAAAW,cAAA,QAAG;UAAAX,EAAA,CAAAY,MAAA,mBAAY;UAAAZ,EAAA,CAAAa,YAAA,EAAI;UAInBb,EAAA,CAAAW,cAAA,SAAI;UAAAX,EAAA,CAAAY,MAAA,gCAAyB;UAAAZ,EAAA,CAAAa,YAAA,EAAK;UAClCb,EAAA,CAAAW,cAAA,YAAO;UAGGX,EAAA,CAAAY,MAAA,mBAAY;UAAAZ,EAAA,CAAAa,YAAA,EAAK;UACrBb,EAAA,CAAAW,cAAA,SAAI;UAAAX,EAAA,CAAAY,MAAA,kBAAU;UAAAZ,EAAA,CAAAa,YAAA,EAAK;UACnBb,EAAA,CAAAW,cAAA,UAAI;UAAAX,EAAA,CAAAY,MAAA,gBAAQ;UAAAZ,EAAA,CAAAa,YAAA,EAAK;UACjBb,EAAA,CAAAW,cAAA,UAAI;UAAAX,EAAA,CAAAY,MAAA,mBAAW;UAAAZ,EAAA,CAAAa,YAAA,EAAK;UAGxBb,EAAA,CAAAc,SAAA,aAOQ;UACVd,EAAA,CAAAa,YAAA,EAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}