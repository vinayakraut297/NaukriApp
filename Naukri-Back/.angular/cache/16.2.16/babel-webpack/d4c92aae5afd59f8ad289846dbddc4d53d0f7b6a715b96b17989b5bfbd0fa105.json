{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth-service.service\";\nimport * as i3 from \"@angular/forms\";\nexport class StudentDashboardComponent {\n  constructor(router, authService, fb) {\n    this.router = router;\n    this.authService = authService;\n    this.fb = fb;\n    this.username = ''; // To store the username\n    this.logout = new EventEmitter();\n  }\n  ngOnInit() {\n    this.studentForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      education: ['', Validators.required],\n      skills: [''],\n      experience: ['']\n    });\n  }\n  onLogout() {\n    this.authService.clearUser(); // Clear user data\n    this.router.navigate(['/']); // Redirect to login page\n  }\n\n  static {\n    this.ɵfac = function StudentDashboardComponent_Factory(t) {\n      return new (t || StudentDashboardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: StudentDashboardComponent,\n      selectors: [[\"app-student-dashboard\"]],\n      outputs: {\n        logout: \"logout\"\n      },\n      decls: 27,\n      vars: 2,\n      consts: [[3, \"click\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Enter your name\"], [\"for\", \"email\"], [\"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Enter your email\"], [\"for\", \"education\"], [\"id\", \"education\", \"formControlName\", \"education\", \"placeholder\", \"Enter your education\"], [\"for\", \"skills\"], [\"id\", \"skills\", \"formControlName\", \"skills\", \"placeholder\", \"Enter your skills\"], [\"for\", \"experience\"], [\"id\", \"experience\", \"formControlName\", \"experience\", \"placeholder\", \"Enter your experience\"], [\"type\", \"submit\"]],\n      template: function StudentDashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h3\");\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function StudentDashboardComponent_Template_button_click_2_listener() {\n            return ctx.onLogout();\n          });\n          i0.ɵɵtext(3, \"Logout\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function StudentDashboardComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(5, \"div\")(6, \"label\", 2);\n          i0.ɵɵtext(7, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\")(10, \"label\", 4);\n          i0.ɵɵtext(11, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\")(14, \"label\", 6);\n          i0.ɵɵtext(15, \"Education\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\")(18, \"label\", 8);\n          i0.ɵɵtext(19, \"Skills\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"div\")(22, \"label\", 10);\n          i0.ɵɵtext(23, \"Experience\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"input\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"button\", 12);\n          i0.ɵɵtext(26, \"Submit\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\"Welcome to Student Dashboard \", ctx.username, \" !\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.studentForm);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["EventEmitter","StudentDashboardComponent","constructor","router","authService","fb","username","logout","ngOnInit","studentForm","group","name","Validators","required","email","education","skills","experience","onLogout","clearUser","navigate","i0","ɵɵdirectiveInject","i1","Router","i2","AuthService","i3","FormBuilder","selectors","outputs","decls","vars","consts","template","StudentDashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","StudentDashboardComponent_Template_button_click_2_listener","StudentDashboardComponent_Template_form_ngSubmit_4_listener","onSubmit","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","ɵɵproperty"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp1\\src\\app\\student-dashboard\\student-dashboard.component.ts","D:\\Java Hefshine\\Angular\\NaukriApp1\\src\\app\\student-dashboard\\student-dashboard.component.html"],"sourcesContent":["import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth-service.service';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-student-dashboard',\n  templateUrl: './student-dashboard.component.html',\n  styleUrls: ['./student-dashboard.component.css']\n})\nexport class StudentDashboardComponent implements OnInit {\n  username: string = ''; // To store the username\n  @Output() logout = new EventEmitter<void>();\n\n  constructor(private router: Router, private authService: AuthService,private fb: FormBuilder  ) {}\n\n  ngOnInit() {\n    this.studentForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      education: ['', Validators.required],\n      skills: [''],\n      experience: ['']\n    });\n  }\n\n\n\n  onLogout() {\n    this.authService.clearUser(); // Clear user data\n    this.router.navigate(['/']); // Redirect to login page\n  }\n}\n","<h3>Welcome to Student Dashboard {{ username }} !</h3>\n<button (click)=\"onLogout()\">Logout</button>\n\n\n<form [formGroup]=\"studentForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"name\">Name</label>\n      <input id=\"name\" formControlName=\"name\" placeholder=\"Enter your name\" />\n    </div>\n  \n    <div>\n      <label for=\"email\">Email</label>\n      <input id=\"email\" formControlName=\"email\" placeholder=\"Enter your email\" />\n    </div>\n  \n    <div>\n      <label for=\"education\">Education</label>\n      <input id=\"education\" formControlName=\"education\" placeholder=\"Enter your education\" />\n    </div>\n  \n    <div>\n      <label for=\"skills\">Skills</label>\n      <input id=\"skills\" formControlName=\"skills\" placeholder=\"Enter your skills\" />\n    </div>\n  \n    <div>\n      <label for=\"experience\">Experience</label>\n      <input id=\"experience\" formControlName=\"experience\" placeholder=\"Enter your experience\" />\n    </div>\n  \n    <button type=\"submit\">Submit</button>\n  </form>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}