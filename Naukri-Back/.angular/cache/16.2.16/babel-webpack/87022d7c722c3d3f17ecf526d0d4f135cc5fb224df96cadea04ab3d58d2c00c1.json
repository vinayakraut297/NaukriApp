{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { AppConfig } from '../app.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../auth-service.service\";\nimport * as i5 from \"@angular/common\";\nfunction RecruiterDashboardComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RecruiterDashboardComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Valid email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RecruiterDashboardComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Company name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RecruiterDashboardComponent {\n  constructor(fb, http, router, authService) {\n    this.fb = fb;\n    this.http = http;\n    this.router = router;\n    this.authService = authService;\n    this.username = ''; // To store the username\n    this.logout = new EventEmitter();\n  }\n  ngOnInit() {\n    // Initialize the recruiter form\n    this.recruiterForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      company: ['', Validators.required],\n      jobTitle: [''],\n      skillsRequired: ['']\n    });\n    // Retrieve user data (if needed)\n    const user = this.authService.getUser();\n    if (user) {\n      this.username = user.username; // Get the username\n    } else {\n      this.router.navigate(['/recruiter-dashboard']); // Redirect if user not found\n    }\n  }\n\n  onSubmit() {\n    if (this.recruiterForm.valid) {\n      this.http.post(`${AppConfig.apiUrl}/recruitersDash/register`, this.recruiterForm.value).subscribe(response => {\n        console.log('Recruiter registered successfully', response);\n        this.router.navigate(['/recruiter-dashboard']);\n      }, error => {\n        console.error('Error occurred during registration', error);\n      });\n    }\n  }\n  onLogout() {\n    this.authService.clearUser(); // Clear user data\n    this.router.navigate(['/']); // Redirect to login page\n  }\n\n  static {\n    this.ɵfac = function RecruiterDashboardComponent_Factory(t) {\n      return new (t || RecruiterDashboardComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RecruiterDashboardComponent,\n      selectors: [[\"app-recruiter-dashboard\"]],\n      outputs: {\n        logout: \"logout\"\n      },\n      decls: 36,\n      vars: 6,\n      consts: [[3, \"click\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Enter your name\"], [4, \"ngIf\"], [\"for\", \"email\"], [\"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Enter your email\"], [\"for\", \"company\"], [\"id\", \"company\", \"formControlName\", \"company\", \"placeholder\", \"Enter your company name\"], [\"for\", \"jobTitle\"], [\"id\", \"jobTitle\", \"formControlName\", \"jobTitle\", \"placeholder\", \"Enter the job title\"], [\"for\", \"skillsRequired\"], [\"id\", \"skillsRequired\", \"formControlName\", \"skillsRequired\", \"placeholder\", \"Enter required skills\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function RecruiterDashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h3\");\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function RecruiterDashboardComponent_Template_button_click_2_listener() {\n            return ctx.onLogout();\n          });\n          i0.ɵɵtext(3, \"Logout\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"br\");\n          i0.ɵɵelementStart(5, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function RecruiterDashboardComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(6, \"div\")(7, \"label\", 2);\n          i0.ɵɵtext(8, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 3);\n          i0.ɵɵtemplate(10, RecruiterDashboardComponent_div_10_Template, 2, 0, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"br\");\n          i0.ɵɵelementStart(12, \"div\")(13, \"label\", 5);\n          i0.ɵɵtext(14, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 6);\n          i0.ɵɵtemplate(16, RecruiterDashboardComponent_div_16_Template, 2, 0, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"br\");\n          i0.ɵɵelementStart(18, \"div\")(19, \"label\", 7);\n          i0.ɵɵtext(20, \"Company\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"input\", 8);\n          i0.ɵɵtemplate(22, RecruiterDashboardComponent_div_22_Template, 2, 0, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"br\");\n          i0.ɵɵelementStart(24, \"div\")(25, \"label\", 9);\n          i0.ɵɵtext(26, \"Job Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(27, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(28, \"br\");\n          i0.ɵɵelementStart(29, \"div\")(30, \"label\", 11);\n          i0.ɵɵtext(31, \"Skills Required\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(32, \"input\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(33, \"br\");\n          i0.ɵɵelementStart(34, \"button\", 13);\n          i0.ɵɵtext(35, \"Submit\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\"Welcome to Recruiter Dashboard \", ctx.username, \" !\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formGroup\", ctx.recruiterForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.recruiterForm.get(\"name\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.recruiterForm.get(\"name\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.recruiterForm.get(\"email\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.recruiterForm.get(\"email\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.recruiterForm.get(\"company\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.recruiterForm.get(\"company\")) == null ? null : tmp_4_0.touched));\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"disabled\", ctx.recruiterForm.invalid);\n        }\n      },\n      dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["EventEmitter","Validators","AppConfig","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","RecruiterDashboardComponent","constructor","fb","http","router","authService","username","logout","ngOnInit","recruiterForm","group","name","required","email","company","jobTitle","skillsRequired","user","getUser","navigate","onSubmit","valid","post","apiUrl","value","subscribe","response","console","log","error","onLogout","clearUser","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","i4","AuthService","selectors","outputs","decls","vars","consts","template","RecruiterDashboardComponent_Template","rf","ctx","ɵɵlistener","RecruiterDashboardComponent_Template_button_click_2_listener","ɵɵelement","RecruiterDashboardComponent_Template_form_ngSubmit_5_listener","ɵɵtemplate","RecruiterDashboardComponent_div_10_Template","RecruiterDashboardComponent_div_16_Template","RecruiterDashboardComponent_div_22_Template","ɵɵadvance","ɵɵtextInterpolate1","ɵɵproperty","tmp_2_0","get","invalid","touched","tmp_3_0","tmp_4_0"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\recruiter-dashboard\\recruiter-dashboard.component.ts","D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\recruiter-dashboard\\recruiter-dashboard.component.html"],"sourcesContent":["import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth-service.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { AppConfig } from '../app.config';\n\n@Component({\n  selector: 'app-recruiter-dashboard',\n  templateUrl: './recruiter-dashboard.component.html',\n  styleUrls: ['./recruiter-dashboard.component.css']\n})\nexport class RecruiterDashboardComponent implements OnInit {\n  recruiterForm!: FormGroup; // Use the definite assignment assertion\n  username: string = ''; // To store the username\n  @Output() logout = new EventEmitter<void>();\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    // Initialize the recruiter form\n    this.recruiterForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      company: ['', Validators.required],\n      jobTitle: [''],\n      skillsRequired: ['']\n    });\n\n    // Retrieve user data (if needed)\n    const user = this.authService.getUser();\n    if (user) {\n      this.username = user.username; // Get the username\n    } else {\n      this.router.navigate(['/recruiter-dashboard']); // Redirect if user not found\n    }\n  }\n\n  onSubmit(): void {\n    if (this.recruiterForm.valid) {\n      this.http.post(`${AppConfig.apiUrl}/recruitersDash/register`, this.recruiterForm.value)\n        .subscribe(response => {\n          console.log('Recruiter registered successfully', response);\n          this.router.navigate(['/recruiter-dashboard']);\n        }, error => {\n          console.error('Error occurred during registration', error);\n        });\n    }\n  }\n\n  onLogout(): void {\n    this.authService.clearUser(); // Clear user data\n    this.router.navigate(['/']); // Redirect to login page\n  }\n}\n","<h3>Welcome to Recruiter Dashboard {{ username }} !</h3>\n<button (click)=\"onLogout()\">Logout</button>\n<br>\n<form [formGroup]=\"recruiterForm\" (ngSubmit)=\"onSubmit()\">\n  <div>\n    <label for=\"name\">Name</label>\n    <input id=\"name\" formControlName=\"name\" placeholder=\"Enter your name\" />\n    <div *ngIf=\"recruiterForm.get('name')?.invalid && recruiterForm.get('name')?.touched\">\n      Name is required\n    </div>\n  </div>\n<br>\n  <div>\n    <label for=\"email\">Email</label>\n    <input id=\"email\" formControlName=\"email\" placeholder=\"Enter your email\" />\n    <div *ngIf=\"recruiterForm.get('email')?.invalid && recruiterForm.get('email')?.touched\">\n      Valid email is required\n    </div>\n  </div>\n  <br>\n  <div>\n    <label for=\"company\">Company</label>\n    <input id=\"company\" formControlName=\"company\" placeholder=\"Enter your company name\" />\n    <div *ngIf=\"recruiterForm.get('company')?.invalid && recruiterForm.get('company')?.touched\">\n      Company name is required\n    </div>\n  </div>\n  <br>\n  <div>\n    <label for=\"jobTitle\">Job Title</label>\n    <input id=\"jobTitle\" formControlName=\"jobTitle\" placeholder=\"Enter the job title\" />\n  </div>\n  <br>\n  <div>\n    <label for=\"skillsRequired\">Skills Required</label>\n    <input id=\"skillsRequired\" formControlName=\"skillsRequired\" placeholder=\"Enter required skills\" />\n  </div>\n  <br>\n  <button type=\"submit\" [disabled]=\"recruiterForm.invalid\">Submit</button>\n</form>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}