{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction StudentLoginComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Username is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StudentLoginComponent_span_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password is required (at least 4 characters).\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StudentLoginComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n\\u00A0 \\u00A0 \", ctx_r5.errorMessage, \"\\n\\u00A0 \");\n  }\n}\nexport class StudentLoginComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.username = '';\n    this.password = '';\n    this.errorMessage = '';\n    this.currentComponent = '';\n    this.loginSuccess = new EventEmitter();\n    this.isLoggedIn = false;\n  }\n  onLoginSuccess() {\n    this.isLoggedIn = true;\n  }\n  onSubmit() {\n    console.log('Username:', this.username);\n    console.log('Password:', this.password);\n    const loginData = {\n      username: this.username,\n      password: this.password\n    };\n    // Ensure Content-Type is set\n    this.http.post('http://localhost:8080/naukri/login', loginData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).subscribe(response => {\n      console.log('Login successful', response);\n      alert('Login successful');\n      this.loginSuccess.emit();\n    }, error => {\n      console.error('Login failed', error);\n      this.errorMessage = 'Invalid username or password';\n    });\n  }\n  static {\n    this.ɵfac = function StudentLoginComponent_Factory(t) {\n      return new (t || StudentLoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: StudentLoginComponent,\n      selectors: [[\"app-student-login\"]],\n      outputs: {\n        loginSuccess: \"loginSuccess\"\n      },\n      decls: 34,\n      vars: 6,\n      consts: [[3, \"ngSubmit\"], [\"studentForm\", \"ngForm\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"usernameInput\", \"ngModel\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"4\", 3, \"ngModel\", \"ngModelChange\"], [\"passwordInput\", \"ngModel\"], [\"type\", \"submit\", 3, \"disabled\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [2, \"color\", \"red\"]],\n      template: function StudentLoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"Student \");\n          i0.ɵɵelementStart(2, \"b\");\n          i0.ɵɵtext(3, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(4, \" Page!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 0, 1);\n          i0.ɵɵlistener(\"ngSubmit\", function StudentLoginComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtext(7, \"\\n\\u00A0 \");\n          i0.ɵɵelementStart(8, \"div\");\n          i0.ɵɵtext(9, \"\\n\\u00A0 \\u00A0 \");\n          i0.ɵɵelementStart(10, \"label\", 2);\n          i0.ɵɵtext(11, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(12, \"\\n\\u00A0 \\u00A0 \");\n          i0.ɵɵelementStart(13, \"input\", 3, 4);\n          i0.ɵɵlistener(\"ngModelChange\", function StudentLoginComponent_Template_input_ngModelChange_13_listener($event) {\n            return ctx.username = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(15, \"\\n\\u00A0 \\u00A0 \");\n          i0.ɵɵtemplate(16, StudentLoginComponent_span_16_Template, 2, 0, \"span\", 5);\n          i0.ɵɵtext(17, \"\\n\\u00A0 \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(18, \"\\n\\u00A0 \\u00A0 \");\n          i0.ɵɵelementStart(19, \"div\");\n          i0.ɵɵtext(20, \"\\n\\u00A0 \\u00A0 \");\n          i0.ɵɵelementStart(21, \"label\", 6);\n          i0.ɵɵtext(22, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(23, \"\\n\\u00A0 \\u00A0 \");\n          i0.ɵɵelementStart(24, \"input\", 7, 8);\n          i0.ɵɵlistener(\"ngModelChange\", function StudentLoginComponent_Template_input_ngModelChange_24_listener($event) {\n            return ctx.password = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(26, \"\\n\\u00A0 \\u00A0 \");\n          i0.ɵɵtemplate(27, StudentLoginComponent_span_27_Template, 2, 0, \"span\", 5);\n          i0.ɵɵtext(28, \"\\n\\u00A0 \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(29, \" \\u00A0 \");\n          i0.ɵɵelementStart(30, \"button\", 9);\n          i0.ɵɵtext(31, \"Submit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(32, \" \\u00A0 \");\n          i0.ɵɵtemplate(33, StudentLoginComponent_div_33_Template, 2, 1, \"div\", 10);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const _r0 = i0.ɵɵreference(6);\n          const _r1 = i0.ɵɵreference(14);\n          const _r3 = i0.ɵɵreference(25);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", _r1.invalid && _r1.touched);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r3.touched);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", _r0.invalid);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        }\n      },\n      dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.NgModel, i4.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r5","errorMessage","StudentLoginComponent","constructor","http","router","username","password","currentComponent","loginSuccess","isLoggedIn","onLoginSuccess","onSubmit","console","log","loginData","post","headers","subscribe","response","alert","emit","error","ɵɵdirectiveInject","i1","HttpClient","i2","Router","selectors","outputs","decls","vars","consts","template","StudentLoginComponent_Template","rf","ctx","ɵɵlistener","StudentLoginComponent_Template_form_ngSubmit_5_listener","StudentLoginComponent_Template_input_ngModelChange_13_listener","$event","ɵɵtemplate","StudentLoginComponent_span_16_Template","StudentLoginComponent_Template_input_ngModelChange_24_listener","StudentLoginComponent_span_27_Template","StudentLoginComponent_div_33_Template","ɵɵproperty","_r1","invalid","touched","_r3","_r0"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\student-login\\student-login.component.ts","D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\student-login\\student-login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-student-login',\n  templateUrl: './student-login.component.html',\n  styleUrls: ['./student-login.component.css']\n})\nexport class StudentLoginComponent {\n  username: string = '';\n    password: string = '';\n    errorMessage: string = '';\n  \n    constructor(private http: HttpClient, private router: Router\n  ) {}\n  currentComponent: string = '';\n  \n  @Output() loginSuccess = new EventEmitter<void>();\n  \n  isLoggedIn: boolean = false;\n  \n    onLoginSuccess() {\n      this.isLoggedIn = true;\n    }\n  \n    onSubmit() {\n      console.log('Username:', this.username);\n      console.log('Password:', this.password);\n      \n      const loginData = {\n        username: this.username,\n        password: this.password\n      };\n    \n      // Ensure Content-Type is set\n      this.http.post<any>('http://localhost:8080/naukri/login', loginData, {\n        headers: { 'Content-Type': 'application/json' }\n      }).subscribe(\n        (response: any) => {\n          console.log('Login successful', response);\n          alert('Login successful');\n          this.loginSuccess.emit();\n        },\n        (error) => {\n          console.error('Login failed', error);\n          this.errorMessage = 'Invalid username or password';\n        }\n      );\n    }\n}\n","<p>Student <b>Login</b> Page!</p>\n\n<form (ngSubmit)=\"onSubmit()\" #studentForm=\"ngForm\">\n  <div>\n    <label for=\"username\">Username</label>\n    <input\n      type=\"text\"\n      id=\"username\" \n      name=\"username\"\n      required\n      [(ngModel)]=\"username\"\n      #usernameInput=\"ngModel\"\n    />\n    <span *ngIf=\"usernameInput.invalid && usernameInput.touched\">Username is required.</span>\n  </div>\n  \n  <div>\n    <label for=\"password\">Password</label>\n    <input\n      type=\"password\"\n      id=\"password\"\n      name=\"password\"\n      required\n      minlength=\"4\"\n      [(ngModel)]=\"password\"\n      #passwordInput=\"ngModel\"\n    />\n    <span *ngIf=\"passwordInput.invalid && passwordInput.touched\">Password is required (at least 4 characters).</span>\n  </div>\n\n  <button type=\"submit\" [disabled]=\"studentForm.invalid\">Submit</button>\n\n  <div *ngIf=\"errorMessage\" style=\"color: red;\">\n    {{ errorMessage }}\n  </div>\n</form>\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}