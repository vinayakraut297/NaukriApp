{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RecruiterLoginComponent = class RecruiterLoginComponent {\n  constructor(recruiterService, router) {\n    this.recruiterService = recruiterService;\n    this.router = router;\n    this.username = '';\n    this.mobileNumber = '';\n    this.email = '';\n    this.errorMessage = '';\n    this.successMessage = '';\n  }\n  Login() {\n    this.router.navigate(['/student-login']); // Redirect to login page\n  }\n\n  onSubmit() {\n    const recruiterData = {\n      username: this.username,\n      mobileNumber: this.mobileNumber,\n      email: this.email\n    };\n    this.recruiterService.registerRecruiter(recruiterData).subscribe(response => {\n      console.log('Data successfully sent to backend:', response);\n      // Assuming the password is part of the response\n      this.successMessage = 'Registration successful! Your password is: ' + response.password;\n      this.errorMessage = '';\n    }, error => {\n      if (error.status === 409) {\n        if (error.error === 'Error: Email already exists') {\n          console.error('Error: Email already exists!');\n          this.errorMessage = 'Email already exists!';\n        } else if (error.error === 'Error: Mobile already exists') {\n          console.error('Error: Mobile number already exists!');\n          this.errorMessage = 'Mobile number already exists!';\n        }\n      } else {\n        console.error('Error occurred while submitting form:', error);\n        this.errorMessage = 'An error occurred. Please try again.';\n      }\n    });\n  }\n};\nRecruiterLoginComponent = __decorate([Component({\n  selector: 'app-recruiter-login',\n  templateUrl: './recruiter-login.component.html',\n  styleUrls: ['./recruiter-login.component.css']\n})], RecruiterLoginComponent);","map":{"version":3,"names":["Component","RecruiterLoginComponent","constructor","recruiterService","router","username","mobileNumber","email","errorMessage","successMessage","Login","navigate","onSubmit","recruiterData","registerRecruiter","subscribe","response","console","log","password","error","status","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Java Hefshine\\Angular\\NaukriApp\\src\\app\\recruiter-login\\recruiter-login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RecruiterServiceService } from '../recruiter-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-recruiter-login',\n  templateUrl: './recruiter-login.component.html',\n  styleUrls: ['./recruiter-login.component.css']\n})\nexport class RecruiterLoginComponent {\n  username: string = '';\n  mobileNumber: string = '';\n  email: string = '';\n  errorMessage: string = '';\n  successMessage: string = '';\n\n  constructor(private recruiterService: RecruiterServiceService,private router:Router) {}\n  Login() {\n    this.router.navigate(['/student-login']); // Redirect to login page\n  }\n\n  onSubmit() {\n    const recruiterData = {\n      username: this.username,\n      mobileNumber: this.mobileNumber,\n      email: this.email\n    };\n\n    this.recruiterService.registerRecruiter(recruiterData).subscribe(\n      (response: any) => {\n        console.log('Data successfully sent to backend:', response);\n        \n        // Assuming the password is part of the response\n        this.successMessage = 'Registration successful! Your password is: ' + response.password;\n        this.errorMessage = '';\n      },\n      error => {\n        if (error.status === 409) {\n          if (error.error === 'Error: Email already exists') {\n            console.error('Error: Email already exists!');\n            this.errorMessage = 'Email already exists!';\n          } else if (error.error === 'Error: Mobile already exists') {\n            console.error('Error: Mobile number already exists!');\n            this.errorMessage = 'Mobile number already exists!';\n          }\n        } else {\n          console.error('Error occurred while submitting form:', error);\n          this.errorMessage = 'An error occurred. Please try again.';\n        }\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAOlCC,YAAoBC,gBAAyC,EAASC,MAAa;IAA/D,KAAAD,gBAAgB,GAAhBA,gBAAgB;IAAkC,KAAAC,MAAM,GAANA,MAAM;IAN5E,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,cAAc,GAAW,EAAE;EAE2D;EACtFC,KAAKA,CAAA;IACH,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;EAC5C;;EAEAC,QAAQA,CAAA;IACN,MAAMC,aAAa,GAAG;MACpBR,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,YAAY,EAAE,IAAI,CAACA,YAAY;MAC/BC,KAAK,EAAE,IAAI,CAACA;KACb;IAED,IAAI,CAACJ,gBAAgB,CAACW,iBAAiB,CAACD,aAAa,CAAC,CAACE,SAAS,CAC7DC,QAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,QAAQ,CAAC;MAE3D;MACA,IAAI,CAACP,cAAc,GAAG,6CAA6C,GAAGO,QAAQ,CAACG,QAAQ;MACvF,IAAI,CAACX,YAAY,GAAG,EAAE;IACxB,CAAC,EACDY,KAAK,IAAG;MACN,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QACxB,IAAID,KAAK,CAACA,KAAK,KAAK,6BAA6B,EAAE;UACjDH,OAAO,CAACG,KAAK,CAAC,8BAA8B,CAAC;UAC7C,IAAI,CAACZ,YAAY,GAAG,uBAAuB;SAC5C,MAAM,IAAIY,KAAK,CAACA,KAAK,KAAK,8BAA8B,EAAE;UACzDH,OAAO,CAACG,KAAK,CAAC,sCAAsC,CAAC;UACrD,IAAI,CAACZ,YAAY,GAAG,+BAA+B;;OAEtD,MAAM;QACLS,OAAO,CAACG,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;QAC7D,IAAI,CAACZ,YAAY,GAAG,sCAAsC;;IAE9D,CAAC,CACF;EACH;CACD;AA3CYP,uBAAuB,GAAAqB,UAAA,EALnCtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWxB,uBAAuB,CA2CnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}